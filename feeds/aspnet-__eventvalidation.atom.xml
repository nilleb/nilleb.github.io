<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>amazed by the noise - aspnet-__eventvalidation</title><link href="https://nilleb.github.io/" rel="alternate"></link><link href="https://nilleb.github.io/feeds/aspnet-__eventvalidation.atom.xml" rel="self"></link><id>https://nilleb.github.io/</id><updated>2007-11-30T00:00:00+01:00</updated><entry><title>"asp.net: __eventvalidation"</title><link href="https://nilleb.github.io/aspnet-__eventvalidation.html" rel="alternate"></link><published>2007-11-30T00:00:00+01:00</published><updated>2007-11-30T00:00:00+01:00</updated><author><name>nilleb - Ivo Bellin Salarin</name></author><id>tag:nilleb.github.io,2007-11-30:/aspnet-__eventvalidation.html</id><summary type="html">&lt;h2&gt;- "thoughts"&lt;/h2&gt;
&lt;p&gt;a mechanism has been added in &lt;a href="http://asp.net"&gt;asp.net&lt;/a&gt; to avoid injection on sensible page contents: the event validation.&lt;br&gt;
simple as registering, server side, all the possible values of all the variables in your web page.&lt;br&gt;
something like:&lt;br&gt;
HASH(DropDownList1.UniqueID) XOR HASH(Valeur de l'article)&lt;br&gt;
the result is then â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;- "thoughts"&lt;/h2&gt;
&lt;p&gt;a mechanism has been added in &lt;a href="http://asp.net"&gt;asp.net&lt;/a&gt; to avoid injection on sensible page contents: the event validation.&lt;br&gt;
simple as registering, server side, all the possible values of all the variables in your web page.&lt;br&gt;
something like:&lt;br&gt;
HASH(DropDownList1.UniqueID) XOR HASH(Valeur de l'article)&lt;br&gt;
the result is then serialized to the __eventvalidation hidden field.  &lt;/p&gt;
&lt;p&gt;more on VIEWSTATE, a strict friend to __EVENTVALIDATION [excerpt from a pdf published in the follow-up]&lt;br&gt;
__VIEWSTATE is an application state container.&lt;br&gt;
Maintain state between multiple postback requests.&lt;br&gt;
"Holds all your variables"&lt;br&gt;
Serialized base64 encoded data.&lt;br&gt;
Viewstate contents can be encrypted.  &lt;/p&gt;
&lt;p&gt;to understand what this is used for, here are the following pages&lt;br&gt;
&lt;a href="http://msdn2.microsoft.com/en-us/library/7kh55542.aspx"&gt;http://msdn2.microsoft.com/en-us/library/7kh55542.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://blogs.msdn.com/amitsh/archive/2007/07/31/why-i-get-invalid-postback-or-callback-argument-errors.aspx"&gt;http://blogs.msdn.com/amitsh/archive/2007/07/31/why-i-get-invalid-postback-or-callback-argument-errors.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://odetocode.com/Blogs/scott/archive/2006/03/21/3153.aspx"&gt;http://odetocode.com/Blogs/scott/archive/2006/03/21/3153.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://weblogs.asp.net/bleroy/archive/2004/08/18/216861.aspx"&gt;http://weblogs.asp.net/bleroy/archive/2004/08/18/216861.aspx&lt;/a&gt;&lt;br&gt;
&lt;a href="http://msdn.microsoft.com/msdnmag/issues/06/12/CuttingEdge/"&gt;http://msdn.microsoft.com/msdnmag/issues/06/12/CuttingEdge/&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;now on more precise explications&lt;br&gt;
&lt;a href="http://www.security-assessment.com/files/presentations/Syscan%2520-%2520Next%2520Generation%2520.NET%2520Vulnerabilities.pdf"&gt;http://www.security-assessment.com/files/presentations/Syscan%20-%20Next%20Generation%20.NET%20Vulnerabilities.pdf&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;tools&lt;br&gt;
&lt;a href="http://www.windowsecurity.com/articles/SPIKE-BURP-real-world-computer-security-usage-Part4.html"&gt;http://www.windowsecurity.com/articles/SPIKE-BURP-real-world-computer-security-usage-Part4.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.portswigger.net/proxy/"&gt;http://www.portswigger.net/proxy/&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;all this is fun.&lt;/p&gt;</content><category term="aspnet-__eventvalidation"></category></entry></feed>