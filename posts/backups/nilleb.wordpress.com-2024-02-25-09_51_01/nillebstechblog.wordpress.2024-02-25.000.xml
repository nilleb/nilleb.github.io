<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2024-02-25 09:51"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>nilleb's tech blog</title>
<link>https://nilleb.wordpress.com</link>
<description>notes about job/computers/code/tests</description>
<pubDate>Sun, 25 Feb 2024 09:51:03 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://nilleb.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_id>56243</wp:author_id>
  <wp:author_login>iagosbar</wp:author_login>
  <wp:author_email>me@nilleb.com</wp:author_email>
  <wp:author_display_name><![CDATA[nilleb]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[Ivo]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[Bellin Salarin]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>19310</wp:term_id>
  <wp:tag_slug>2003</wp:tag_slug>
  <wp:tag_name><![CDATA[2003]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4180</wp:term_id>
  <wp:tag_slug>2007</wp:tag_slug>
  <wp:tag_name><![CDATA[2007]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>243274</wp:term_id>
  <wp:tag_slug>2010</wp:tag_slug>
  <wp:tag_name><![CDATA[2010]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2387</wp:term_id>
  <wp:tag_slug>all</wp:tag_slug>
  <wp:tag_name><![CDATA[all]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6022068</wp:term_id>
  <wp:tag_slug>appengine</wp:tag_slug>
  <wp:tag_name><![CDATA[appengine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12589</wp:term_id>
  <wp:tag_slug>arguments</wp:tag_slug>
  <wp:tag_name><![CDATA[arguments]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4312190</wp:term_id>
  <wp:tag_slug>bagna-caoda</wp:tag_slug>
  <wp:tag_name><![CDATA[bagna caoda]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16706192</wp:term_id>
  <wp:tag_slug>bidipipes-porta-socket-network-windows-linux-pidgin-ichat-mac-apple</wp:tag_slug>
  <wp:tag_name><![CDATA[bidipipes porta socket network windows linux pidgin ichat mac apple]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33927</wp:term_id>
  <wp:tag_slug>command-line</wp:tag_slug>
  <wp:tag_name><![CDATA[command line]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>174250</wp:term_id>
  <wp:tag_slug>compression</wp:tag_slug>
  <wp:tag_name><![CDATA[compression]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>258</wp:term_id>
  <wp:tag_slug>computer</wp:tag_slug>
  <wp:tag_name><![CDATA[computer]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45809</wp:term_id>
  <wp:tag_slug>configuration</wp:tag_slug>
  <wp:tag_name><![CDATA[configuration]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7781571</wp:term_id>
  <wp:tag_slug>content-encoding</wp:tag_slug>
  <wp:tag_name><![CDATA[content-encoding]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>78145</wp:term_id>
  <wp:tag_slug>create</wp:tag_slug>
  <wp:tag_name><![CDATA[create]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26143</wp:term_id>
  <wp:tag_slug>creation</wp:tag_slug>
  <wp:tag_name><![CDATA[creation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22379</wp:term_id>
  <wp:tag_slug>data</wp:tag_slug>
  <wp:tag_name><![CDATA[data]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>431508</wp:term_id>
  <wp:tag_slug>davide</wp:tag_slug>
  <wp:tag_name><![CDATA[davide]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7082004</wp:term_id>
  <wp:tag_slug>dcpromo</wp:tag_slug>
  <wp:tag_name><![CDATA[dcpromo]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>406385</wp:term_id>
  <wp:tag_slug>derive</wp:tag_slug>
  <wp:tag_name><![CDATA[derive]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30643</wp:term_id>
  <wp:tag_slug>designer</wp:tag_slug>
  <wp:tag_name><![CDATA[designer]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6504</wp:term_id>
  <wp:tag_slug>dev</wp:tag_slug>
  <wp:tag_name><![CDATA[dev]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>780</wp:term_id>
  <wp:tag_slug>development</wp:tag_slug>
  <wp:tag_name><![CDATA[development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2760</wp:term_id>
  <wp:tag_slug>dictionary</wp:tag_slug>
  <wp:tag_name><![CDATA[dictionary]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17846</wp:term_id>
  <wp:tag_slug>dns</wp:tag_slug>
  <wp:tag_name><![CDATA[dns]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17729</wp:term_id>
  <wp:tag_slug>document</wp:tag_slug>
  <wp:tag_name><![CDATA[document]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7781570</wp:term_id>
  <wp:tag_slug>documentmanager</wp:tag_slug>
  <wp:tag_name><![CDATA[documentmanager]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7082003</wp:term_id>
  <wp:tag_slug>domaincontroller</wp:tag_slug>
  <wp:tag_name><![CDATA[domaincontroller]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5481</wp:term_id>
  <wp:tag_slug>dos</wp:tag_slug>
  <wp:tag_name><![CDATA[dos]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18466</wp:term_id>
  <wp:tag_slug>eclipse</wp:tag_slug>
  <wp:tag_name><![CDATA[eclipse]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>638093</wp:term_id>
  <wp:tag_slug>edp</wp:tag_slug>
  <wp:tag_name><![CDATA[edp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7200371</wp:term_id>
  <wp:tag_slug>elementtree</wp:tag_slug>
  <wp:tag_name><![CDATA[elementtree]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2879298</wp:term_id>
  <wp:tag_slug>esker</wp:tag_slug>
  <wp:tag_name><![CDATA[esker]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7665275</wp:term_id>
  <wp:tag_slug>eskercorp</wp:tag_slug>
  <wp:tag_name><![CDATA[eskercorp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>91121</wp:term_id>
  <wp:tag_slug>etools</wp:tag_slug>
  <wp:tag_name><![CDATA[etools]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14014</wp:term_id>
  <wp:tag_slug>exchange</wp:tag_slug>
  <wp:tag_name><![CDATA[Exchange]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15506907</wp:term_id>
  <wp:tag_slug>exchange-2010</wp:tag_slug>
  <wp:tag_name><![CDATA[exchange 2010]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8205193</wp:term_id>
  <wp:tag_slug>exchange-connector</wp:tag_slug>
  <wp:tag_name><![CDATA[exchange connector]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7082002</wp:term_id>
  <wp:tag_slug>exchange2007sp1</wp:tag_slug>
  <wp:tag_name><![CDATA[exchange2007sp1]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7109903</wp:term_id>
  <wp:tag_slug>faxnumber</wp:tag_slug>
  <wp:tag_name><![CDATA[faxnumber]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>793571</wp:term_id>
  <wp:tag_slug>filesystem</wp:tag_slug>
  <wp:tag_name><![CDATA[filesystem]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>213321</wp:term_id>
  <wp:tag_slug>filter</wp:tag_slug>
  <wp:tag_name><![CDATA[filter]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>62572</wp:term_id>
  <wp:tag_slug>format</wp:tag_slug>
  <wp:tag_name><![CDATA[format]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6135</wp:term_id>
  <wp:tag_slug>french</wp:tag_slug>
  <wp:tag_name><![CDATA[french]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>783277</wp:term_id>
  <wp:tag_slug>fscm</wp:tag_slug>
  <wp:tag_name><![CDATA[fscm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7669335</wp:term_id>
  <wp:tag_slug>gdredit</wp:tag_slug>
  <wp:tag_name><![CDATA[GDREdit]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>933170</wp:term_id>
  <wp:tag_slug>ghostscript</wp:tag_slug>
  <wp:tag_name><![CDATA[ghostscript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>491762</wp:term_id>
  <wp:tag_slug>gino</wp:tag_slug>
  <wp:tag_name><![CDATA[gino]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>352234</wp:term_id>
  <wp:tag_slug>glade</wp:tag_slug>
  <wp:tag_name><![CDATA[glade]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12873216</wp:term_id>
  <wp:tag_slug>gladestore</wp:tag_slug>
  <wp:tag_name><![CDATA[gladestore]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>743249</wp:term_id>
  <wp:tag_slug>gobject</wp:tag_slug>
  <wp:tag_name><![CDATA[gobject]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27540178</wp:term_id>
  <wp:tag_slug>golang</wp:tag_slug>
  <wp:tag_name><![CDATA[golang]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>20143</wp:term_id>
  <wp:tag_slug>gs</wp:tag_slug>
  <wp:tag_name><![CDATA[gs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>177699</wp:term_id>
  <wp:tag_slug>gtk</wp:tag_slug>
  <wp:tag_name><![CDATA[gtk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4602391</wp:term_id>
  <wp:tag_slug>gtksourceview</wp:tag_slug>
  <wp:tag_name><![CDATA[gtksourceview]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11289582</wp:term_id>
  <wp:tag_slug>gtksourceview2</wp:tag_slug>
  <wp:tag_name><![CDATA[gtksourceview2]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7168</wp:term_id>
  <wp:tag_slug>gui</wp:tag_slug>
  <wp:tag_name><![CDATA[GUI]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>70178</wp:term_id>
  <wp:tag_slug>headache</wp:tag_slug>
  <wp:tag_name><![CDATA[headache]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10518</wp:term_id>
  <wp:tag_slug>http</wp:tag_slug>
  <wp:tag_name><![CDATA[http]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>719307</wp:term_id>
  <wp:tag_slug>iis7</wp:tag_slug>
  <wp:tag_name><![CDATA[iis7]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>254898</wp:term_id>
  <wp:tag_slug>inno</wp:tag_slug>
  <wp:tag_name><![CDATA[inno]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1642</wp:term_id>
  <wp:tag_slug>italian</wp:tag_slug>
  <wp:tag_name><![CDATA[italian]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>457</wp:term_id>
  <wp:tag_slug>javascript</wp:tag_slug>
  <wp:tag_name><![CDATA[javascript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2624</wp:term_id>
  <wp:tag_slug>library</wp:tag_slug>
  <wp:tag_name><![CDATA[library]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>487802</wp:term_id>
  <wp:tag_slug>libxml2</wp:tag_slug>
  <wp:tag_name><![CDATA[libxml2]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>62087</wp:term_id>
  <wp:tag_slug>logging</wp:tag_slug>
  <wp:tag_name><![CDATA[logging]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13406365</wp:term_id>
  <wp:tag_slug>luca-barbato</wp:tag_slug>
  <wp:tag_name><![CDATA[luca barbato]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3024421</wp:term_id>
  <wp:tag_slug>lxml</wp:tag_slug>
  <wp:tag_name><![CDATA[lxml]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7580562</wp:term_id>
  <wp:tag_slug>ly-as-ondemand</wp:tag_slug>
  <wp:tag_name><![CDATA[ly-as-ondemand]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7580563</wp:term_id>
  <wp:tag_slug>ly-qa</wp:tag_slug>
  <wp:tag_name><![CDATA[ly-qa]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49381</wp:term_id>
  <wp:tag_slug>man</wp:tag_slug>
  <wp:tag_name><![CDATA[man]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>617054</wp:term_id>
  <wp:tag_slug>merge</wp:tag_slug>
  <wp:tag_name><![CDATA[merge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7680421</wp:term_id>
  <wp:tag_slug>network-failure</wp:tag_slug>
  <wp:tag_name><![CDATA[network failure]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11834368</wp:term_id>
  <wp:tag_slug>ngbasics</wp:tag_slug>
  <wp:tag_name><![CDATA[ngbasics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>145412</wp:term_id>
  <wp:tag_slug>notification</wp:tag_slug>
  <wp:tag_name><![CDATA[notification]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>209994</wp:term_id>
  <wp:tag_slug>option</wp:tag_slug>
  <wp:tag_name><![CDATA[option]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33437132</wp:term_id>
  <wp:tag_slug>organizational-forms-library</wp:tag_slug>
  <wp:tag_name><![CDATA[organizational forms library]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4661412</wp:term_id>
  <wp:tag_slug>os3</wp:tag_slug>
  <wp:tag_name><![CDATA[os3]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9559</wp:term_id>
  <wp:tag_slug>outlook</wp:tag_slug>
  <wp:tag_name><![CDATA[outlook]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19368</wp:term_id>
  <wp:tag_slug>paper</wp:tag_slug>
  <wp:tag_name><![CDATA[paper]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4393286</wp:term_id>
  <wp:tag_slug>paper-format</wp:tag_slug>
  <wp:tag_name><![CDATA[paper format]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>47812</wp:term_id>
  <wp:tag_slug>parser</wp:tag_slug>
  <wp:tag_name><![CDATA[parser]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>133361</wp:term_id>
  <wp:tag_slug>persistent</wp:tag_slug>
  <wp:tag_name><![CDATA[persistent]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33437133</wp:term_id>
  <wp:tag_slug>public-folder-database</wp:tag_slug>
  <wp:tag_name><![CDATA[public folder database]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6752484</wp:term_id>
  <wp:tag_slug>py2exe</wp:tag_slug>
  <wp:tag_name><![CDATA[py2exe]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10487420</wp:term_id>
  <wp:tag_slug>pydev-extensions</wp:tag_slug>
  <wp:tag_name><![CDATA[pydev extensions]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>267158</wp:term_id>
  <wp:tag_slug>pygtk</wp:tag_slug>
  <wp:tag_name><![CDATA[pygtk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9103428</wp:term_id>
  <wp:tag_slug>pyhp</wp:tag_slug>
  <wp:tag_name><![CDATA[pyhp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>832</wp:term_id>
  <wp:tag_slug>python</wp:tag_slug>
  <wp:tag_name><![CDATA[python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6973516</wp:term_id>
  <wp:tag_slug>pywin32</wp:tag_slug>
  <wp:tag_name><![CDATA[pywin32]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8841</wp:term_id>
  <wp:tag_slug>qa</wp:tag_slug>
  <wp:tag_name><![CDATA[qa]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16525</wp:term_id>
  <wp:tag_slug>quality</wp:tag_slug>
  <wp:tag_name><![CDATA[quality]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>195721</wp:term_id>
  <wp:tag_slug>query</wp:tag_slug>
  <wp:tag_name><![CDATA[query]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30</wp:term_id>
  <wp:tag_slug>random</wp:tag_slug>
  <wp:tag_name><![CDATA[random]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8845</wp:term_id>
  <wp:tag_slug>recipe</wp:tag_slug>
  <wp:tag_name><![CDATA[recipe]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>54025</wp:term_id>
  <wp:tag_slug>regex</wp:tag_slug>
  <wp:tag_name><![CDATA[regex]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7669862</wp:term_id>
  <wp:tag_slug>rlx</wp:tag_slug>
  <wp:tag_name><![CDATA[rlx]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7729934</wp:term_id>
  <wp:tag_slug>rulelg</wp:tag_slug>
  <wp:tag_name><![CDATA[rulelg]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22714</wp:term_id>
  <wp:tag_slug>rules</wp:tag_slug>
  <wp:tag_name><![CDATA[rules]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>372186</wp:term_id>
  <wp:tag_slug>runner</wp:tag_slug>
  <wp:tag_name><![CDATA[runner]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>401154</wp:term_id>
  <wp:tag_slug>sales-orders</wp:tag_slug>
  <wp:tag_name><![CDATA[sales orders]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6812142</wp:term_id>
  <wp:tag_slug>salesorder</wp:tag_slug>
  <wp:tag_name><![CDATA[salesorder]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>31099</wp:term_id>
  <wp:tag_slug>sap</wp:tag_slug>
  <wp:tag_name><![CDATA[sap]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10241328</wp:term_id>
  <wp:tag_slug>sap-sopap-esker-salesorders</wp:tag_slug>
  <wp:tag_name><![CDATA[sap sopap esker salesorders]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>126400</wp:term_id>
  <wp:tag_slug>save</wp:tag_slug>
  <wp:tag_name><![CDATA[save]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7892443</wp:term_id>
  <wp:tag_slug>servermanager</wp:tag_slug>
  <wp:tag_name><![CDATA[servermanager]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7884256</wp:term_id>
  <wp:tag_slug>servermanagercmd</wp:tag_slug>
  <wp:tag_name><![CDATA[servermanagercmd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17177</wp:term_id>
  <wp:tag_slug>setup</wp:tag_slug>
  <wp:tag_name><![CDATA[setup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7665274</wp:term_id>
  <wp:tag_slug>setuppy</wp:tag_slug>
  <wp:tag_name><![CDATA[setuppy]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1015</wp:term_id>
  <wp:tag_slug>share</wp:tag_slug>
  <wp:tag_name><![CDATA[share]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7892581</wp:term_id>
  <wp:tag_slug>showxml</wp:tag_slug>
  <wp:tag_name><![CDATA[showxml]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7892580</wp:term_id>
  <wp:tag_slug>showxml-js</wp:tag_slug>
  <wp:tag_name><![CDATA[showxml.js]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2790558</wp:term_id>
  <wp:tag_slug>simulate</wp:tag_slug>
  <wp:tag_name><![CDATA[simulate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>827</wp:term_id>
  <wp:tag_slug>simulation</wp:tag_slug>
  <wp:tag_name><![CDATA[simulation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10523</wp:term_id>
  <wp:tag_slug>smb</wp:tag_slug>
  <wp:tag_name><![CDATA[smb]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>161001</wp:term_id>
  <wp:tag_slug>sop</wp:tag_slug>
  <wp:tag_name><![CDATA[sop]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10241345</wp:term_id>
  <wp:tag_slug>sopap</wp:tag_slug>
  <wp:tag_name><![CDATA[sopap]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10346</wp:term_id>
  <wp:tag_slug>sql</wp:tag_slug>
  <wp:tag_name><![CDATA[sql]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>28055</wp:term_id>
  <wp:tag_slug>start</wp:tag_slug>
  <wp:tag_name><![CDATA[start]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13406363</wp:term_id>
  <wp:tag_slug>sub-classing-gobject-in-python</wp:tag_slug>
  <wp:tag_name><![CDATA[Sub-classing GObject in Python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>13406364</wp:term_id>
  <wp:tag_slug>subclassing</wp:tag_slug>
  <wp:tag_name><![CDATA[subclassing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>61583</wp:term_id>
  <wp:tag_slug>sustainable-development</wp:tag_slug>
  <wp:tag_name><![CDATA[sustainable-development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>164684</wp:term_id>
  <wp:tag_slug>svn</wp:tag_slug>
  <wp:tag_name><![CDATA[svn]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11766</wp:term_id>
  <wp:tag_slug>temp</wp:tag_slug>
  <wp:tag_name><![CDATA[temp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8</wp:term_id>
  <wp:tag_slug>test</wp:tag_slug>
  <wp:tag_name><![CDATA[test]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7580739</wp:term_id>
  <wp:tag_slug>tiffmerger</wp:tag_slug>
  <wp:tag_name><![CDATA[tiffmerger]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7580740</wp:term_id>
  <wp:tag_slug>tiftool</wp:tag_slug>
  <wp:tag_name><![CDATA[tiftool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27391</wp:term_id>
  <wp:tag_slug>vacations</wp:tag_slug>
  <wp:tag_name><![CDATA[vacations]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>99926</wp:term_id>
  <wp:tag_slug>watchdog</wp:tag_slug>
  <wp:tag_name><![CDATA[watchdog]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>262643</wp:term_id>
  <wp:tag_slug>whatif</wp:tag_slug>
  <wp:tag_name><![CDATA[whatif]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1359</wp:term_id>
  <wp:tag_slug>wiki</wp:tag_slug>
  <wp:tag_name><![CDATA[wiki]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4935</wp:term_id>
  <wp:tag_slug>win32</wp:tag_slug>
  <wp:tag_name><![CDATA[win32]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>800</wp:term_id>
  <wp:tag_slug>windows</wp:tag_slug>
  <wp:tag_name><![CDATA[windows]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>158016</wp:term_id>
  <wp:tag_slug>windows2003</wp:tag_slug>
  <wp:tag_name><![CDATA[windows2003]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7083138</wp:term_id>
  <wp:tag_slug>windows2008</wp:tag_slug>
  <wp:tag_name><![CDATA[windows2008]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1962</wp:term_id>
  <wp:tag_slug>wishlist</wp:tag_slug>
  <wp:tag_name><![CDATA[wishlist]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>131</wp:term_id>
  <wp:tag_slug>work</wp:tag_slug>
  <wp:tag_name><![CDATA[work]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3121784</wp:term_id>
  <wp:tag_slug>wscript</wp:tag_slug>
  <wp:tag_name><![CDATA[wscript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6852</wp:term_id>
  <wp:tag_slug>xml</wp:tag_slug>
  <wp:tag_name><![CDATA[xml]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4662257</wp:term_id>
  <wp:tag_slug>xml-editor</wp:tag_slug>
  <wp:tag_name><![CDATA[xml editor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11834363</wp:term_id>
  <wp:tag_slug>xmlfinder</wp:tag_slug>
  <wp:tag_name><![CDATA[xmlfinder]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11834366</wp:term_id>
  <wp:tag_slug>xmlfindtool</wp:tag_slug>
  <wp:tag_name><![CDATA[xmlfindtool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12873215</wp:term_id>
  <wp:tag_slug>xmltreeview</wp:tag_slug>
  <wp:tag_name><![CDATA[xmltreeview]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>99556</wp:term_id>
  <wp:tag_slug>xpath</wp:tag_slug>
  <wp:tag_name><![CDATA[xpath]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>http://s0.wp.com/i/buttonw-com.png</url>
		<title>nilleb&#8217;s tech blog</title>
		<link>https://nilleb.wordpress.com</link>
	</image>
	<item>
  <title><![CDATA[About]]></title>
  <link>https://nilleb.wordpress.com/about/</link>
  <pubDate>Fri, 16 May 2008 21:05:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[Ivo Bellin Salarin,

Developer at Esker (until 02/2011), developer and release manager at Cegid (until 12/2016). Machine learning engineer at LumApps.

Linux lover, with good technical skills for everything that's related to computer science.

C/C++, Java, Python, C# developer, oriented towards the <em>agile</em> development of <em>reusable</em> tools which can help me completing current work.

Contributing to every piece of free software which passes nearby, in the way I can best.

Living in Lyon, France.

<img class="alignnone" title="avatar" src="http://0.gravatar.com/avatar/0578314d6609e87adcf09e6e4c2c33a3" alt="" width="80" height="80" />
<pre></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2008-05-16 21:05:15</wp:post_date>
  <wp:post_date_gmt>2008-05-16 21:05:15</wp:post_date_gmt>
  <wp:post_modified>2016-12-06 13:58:37</wp:post_modified>
  <wp:post_modified_gmt>2016-12-06 12:58:37</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_07fd409006bf23a375301d1bc6b763c1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9ab0bb4142a666336303cad636991d14</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[nilleb as...]]></title>
  <link>https://nilleb.wordpress.com/?p=3</link>
  <pubDate>Fri, 16 May 2008 21:09:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=3</guid>
  <description/>
  <content:encoded><![CDATA[autant simple que rapide.

j'ai pu créer un blog technique pour mon boulot en très peu de temp.

avec ça, je crois que je pourrais noter mes pensées, et utiliser la recherche du site pour retrouver mes notes. pas mal, en deux minutes.

nilleb, pourquoi? parce que c'est l'invers de mon nom de famille. facile.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2008-05-16 21:09:15</wp:post_date>
  <wp:post_date_gmt>2008-05-16 21:09:15</wp:post_date_gmt>
  <wp:post_modified>2008-05-16 21:09:15</wp:post_modified>
  <wp:post_modified_gmt>2008-05-16 21:09:15</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nilleb-as</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="start"><![CDATA[start]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[why are you seeing only this post?]]></title>
  <link>https://nilleb.wordpress.com/2008/05/19/why-are-you-seeing-only-this-post/</link>
  <pubDate>Mon, 19 May 2008 07:24:52 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=4</guid>
  <description/>
  <content:encoded><![CDATA[well, this is a mainly private blog. you will see only a few posts, like really important solutions, which are not related to the enterprise where I work.

if you <em>really</em> want to see what is going underground, write me.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2008-05-19 09:24:52</wp:post_date>
  <wp:post_date_gmt>2008-05-19 07:24:52</wp:post_date_gmt>
  <wp:post_modified>2008-05-19 09:24:52</wp:post_modified>
  <wp:post_modified_gmt>2008-05-19 07:24:52</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-are-you-seeing-only-this-post</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[recipe: exchange2007 server]]></title>
  <link>https://nilleb.wordpress.com/?p=5</link>
  <pubDate>Mon, 19 May 2008 08:55:39 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=5</guid>
  <description/>
  <content:encoded><![CDATA[Here are the instructions to install an Exchange 2007 server on your favourite machine

<strong>Requirements</strong>

a 64 bit processor (far far better)

1.5 GiB RAM

a lot of disk space (Exchange2007 needed at least 4GiB of free space to run, once you've installed it. to be sure, count 10+0.5*i GiB , where i is the number )

<strong>Procedure</strong>
<ul>
	<li>install the DNS (Control Panel, Add/remove programs, Windows components, Network tools, DNS)</li>
	<li>configure your machine to use 127.0.0.1 as DNS server</li>
	<li>run dcpromo, then type a domain name you like. a sufficient amount of "press next" should bring you to a warning in the dns test report. select "install a new dns server" and press again next a few times.</li>
	<li>reboot.</li>
	<li>go to Administrative Tools, DNS, right click on your server name, select the forwarders tab</li>
	<li>configure your forwarders (put simply your old DNS as forwarder for every other domain if you do not know what to do)</li>
	<li>open Administrative Tools\Active Directory Domains and Trusts</li>
	<li>make sure thet your domain is at least at a "Windows 2000 native" fonctional level (right click on the domain name, select properties; if it is in "Windows 2000 mixed", raise its level right clicking on the domain name, "Raise the domain functional level")</li>
	<li>you've completed the DC configuration.</li>
	<li>get the latest available binary for Exchange2007.</li>
	<li>start the setup of Exchange 2007</li>
	<li>install the required components that you've not installed yet (<a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/download.mspx">powershell</a>, <a href="http://www.microsoft.com/downloads/details.aspx?familyid=B44A0000-ACF8-4FA1-AFFB-40E78D788B00&amp;displaylang=en">.net 2.0</a>, <a href="http://support.microsoft.com/kb/907265">mmc 3.0</a>)</li>
	<li>start the setup; choose your preferences, and finally press on Install</li>
	<li>in about 40 minutes, you will be done. this amount of time largely depends on your HW.</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2008-05-19 10:55:39</wp:post_date>
  <wp:post_date_gmt>2008-05-19 08:55:39</wp:post_date_gmt>
  <wp:post_modified>2008-05-19 11:49:51</wp:post_modified>
  <wp:post_modified_gmt>2008-05-19 09:49:51</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>recipe-exchange2007-server</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dcpromo"><![CDATA[dcpromo]]></category>
  <category domain="post_tag" nicename="dns"><![CDATA[dns]]></category>
  <category domain="post_tag" nicename="domaincontroller"><![CDATA[domaincontroller]]></category>
  <category domain="post_tag" nicename="exchange2007sp1"><![CDATA[exchange2007sp1]]></category>
  <category domain="post_tag" nicename="recipe"><![CDATA[recipe]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows2003"><![CDATA[windows2003]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[recipe: Exchange 2007 server (on Windows 2008)]]></title>
  <link>https://nilleb.wordpress.com/?p=6</link>
  <pubDate>Mon, 19 May 2008 09:56:16 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=6</guid>
  <description/>
  <content:encoded><![CDATA[<!--[if gte mso 9]&amp;gt;  Normal 0 21   false false false        MicrosoftInternetExplorer4  &amp;lt;![endif]--><!--[if gte mso 9]&amp;gt;   &amp;lt;![endif]--><!--[if !mso]&amp;gt;-->
<h3 class="MsoNormal"><span><strong>Requirements</strong></span></h3>
<p class="MsoNormal">A 64 bit processor</p>
<p class="MsoNormal"><span>A lot of disk space (I used 40 GB)</span></p>
<p class="MsoNormal"><span>1.5 GiB RAM (you can use down to 768MiB, but if it’s more it’s really better)</span></p>
<p class="MsoNormal"><span> </span></p>

<h3>Procedure</h3>
<p class="MsoNormal"><span>Install the ADDS role</span></p>
<p class="MsoNormal"><span>-option #1 : through the ServerManager (it’s an administrative tool/MMC)</span></p>
<p class="MsoNormal"><span>-option #2: commandline</span></p>

<pre><span>ServerManagerCmd –i RSAT-ADDS</span></pre>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span>Change your ipv4 and ipv6 addresses to a static one. To simplify things, use an ipv6 address like the following</span></p>
<p class="MsoNormal"><span>Ipv4 = 10.1.6.99</span></p>
<p class="MsoNormal"><span>Ipv6 = ::ffff:10.1.6.99</span></p>
<p class="MsoNormal"><span>Run dcpromo, using basic settings</span></p>
<p class="MsoNormal"><span>The following is a summary of the configuration used</span></p>
<p class="MsoNormal"><span> </span></p>

<pre><span>Configure this server as the first Active Directory domain controller in a new forest.</span>
<span> </span>
<span>The new domain name is echange64.esker.corp. This is also the name of the new forest.</span>
<span> </span>
<span>The NetBIOS name of the domain is ECHANGE64</span>
<span> </span>
<span>Forest</span><span> Functional Level: Windows 2000</span>
<span> </span>
<span>Domain Functional Level: Windows 2000 Native</span>
<span> </span>
<span>Site: Default-First-Site-Name</span>
<span> </span>
<span>Additional Options:</span>
<span><span>  </span>Read-only domain controller: No</span>
<span><span>  </span>Global catalog: Yes</span>
<span><span>  </span>DNS Server: Yes</span>
<span> </span>
<span>Create DNS Delegation: No</span>
<span> </span>
<span>Database folder: C:\Windows\NTDS</span>
<span>Log file folder: C:\Windows\NTDS</span>
<span>SYSVOL folder: C:\Windows\SYSVOL</span>
<span> </span>
<span>The DNS Server service will be installed on this computer.</span>
<span>The DNS Server service will be configured on this computer.</span>
<span>This computer will be configured to use this DNS server as its preferred DNS server.</span>

<span>The password of the new domain Administrator will be the same as the password of the local Administrator of this computer.</span></pre>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span>After the reboot:</span></p>
<p class="MsoNormal"><span>You MUST verify that your DNS works in a good way. To do this, you can open a cmd shell and type</span></p>
<p class="MsoNormal"><span> </span></p>

<pre><span>dcdiag /test:DNS</span></pre>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span>You CAN complete the DNS configuration (for delegation to other DNS servers), adding a forwarder. To do so, open the DNS mmc (among the admin tools). Right click on your computer name, select properties. Now select the forwarders tab, Edit and add the ip address of your esker.corp DNS. You CAN also go to the Monitoring tab, select the two available tests and start them. They should pass.</span></p>
<p class="MsoNormal"><span> </span></p>
<p class="MsoNormal"><span>Now proceed reading the following document</span></p>
<p class="MsoNormal"><span><a href="http://technet.microsoft.com/en-us/library/bb691354(EXCHG.80).aspx">How to Install Exchange 2007 SP1 Prerequisites on Windows Server 2008 or Windows Vista</a></span></p>
<p class="MsoNormal"><span>Once you’ve completed all the steps and you’ve understood its entirety... This is the list of commands you should type in a cmd shell.</span></p>
<p class="MsoNormal"><span> </span></p>

<pre><span>ServerManagerCmd -i PowerShell</span>

<span>ServerManagerCmd -i Web-Server</span>
<span>ServerManagerCmd -i Web-ISAPI-Ext</span>
<span>ServerManagerCmd -i Web-Metabase</span>
<span>ServerManagerCmd -i Web-Lgcy-Mgmt-Console</span>
<span>ServerManagerCmd -i Web-Basic-Auth</span>
<span>ServerManagerCmd -i Web-Digest-Auth</span>
<span>ServerManagerCmd -i Web-Windows-Auth</span>
<span>ServerManagerCmd -i Web-Dyn-Compression</span>
<span>ServerManagerCmd -i RPC-over-HTTP-proxy</span></pre>
<p class="MsoNormal"><span style="font-size:10pt;"> </span></p>
<p class="MsoNormal"><span>Now you can proceed to run the Exchange2007 SP1 setup (available on <a href="http://technet.microsoft.com/en-us/evalcenter/bb736128.aspx">http://technet.microsoft.com/en-us/evalcenter/bb736128.aspx</a> if needed). If during the pre-install check you obtain a message like the following,</span></p>
<p class="MsoNormal"><span> </span></p>

<pre><span style="font-size:10pt;">Warning:</span></pre>
<pre><span style="font-size:10pt;">Setup cannot detect an SMTP or Send connector with an address space of '*'. Mail flow to the Internet may not work properly.</span></pre>
<p class="MsoNormal"><span style="font-size:10pt;"> </span></p>
<p class="MsoNormal"><span>never mind. (<a href="http://support.microsoft.com/kb/556055">§</a>)</span></p>
<p class="MsoNormal"><span style="font-size:10pt;"> </span></p>
<p class="MsoBodyText"><span>Select Install and wait (1hour, at least). Then, you’re done.</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2008-05-19 11:56:16</wp:post_date>
  <wp:post_date_gmt>2008-05-19 09:56:16</wp:post_date_gmt>
  <wp:post_modified>2008-05-19 12:02:46</wp:post_modified>
  <wp:post_modified_gmt>2008-05-19 10:02:46</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>recipe-exchange-2007-server-on-windows-2008</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dcpromo"><![CDATA[dcpromo]]></category>
  <category domain="post_tag" nicename="dns"><![CDATA[dns]]></category>
  <category domain="post_tag" nicename="domaincontroller"><![CDATA[domaincontroller]]></category>
  <category domain="post_tag" nicename="exchange2007sp1"><![CDATA[exchange2007sp1]]></category>
  <category domain="post_tag" nicename="recipe"><![CDATA[recipe]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows2008"><![CDATA[windows2008]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[wishlist: runner]]></title>
  <link>https://nilleb.wordpress.com/?p=7</link>
  <pubDate>Mon, 19 May 2008 10:12:29 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=7</guid>
  <description/>
  <content:encoded><![CDATA[I would like to have a software which, read an XML configuration file, executes an action on each node, given the attributes of the node.

So, having for example
<pre>&lt;actions&gt;
&lt;action priority="1" type="copy" source="c:\file1.fl" destination="c:\temp\file2.exe"&gt;
&lt;action priority="2" type="execute" source="c:\temp\file2.exe" args="param1 param2" output="c:\windows\temp\fake.out"&gt;
&lt;/actions&gt;</pre>
I would like to  get, in the fake.out file the output of the file.exe. this file has been executed after that it has been copied to its execution path.

I would also like the specified type(s) to be used only if defined in the Class of the executable. Otherwise, an error should be returned (and the execution ended). As well, the type should identify the function to be executed, and all the other parameters should be passed to the function.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>7</wp:post_id>
  <wp:post_date>2008-05-19 12:12:29</wp:post_date>
  <wp:post_date_gmt>2008-05-19 10:12:29</wp:post_date_gmt>
  <wp:post_modified>2008-06-06 11:47:16</wp:post_modified>
  <wp:post_modified_gmt>2008-06-06 09:47:16</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wishlist-runner</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="runner"><![CDATA[runner]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wishlist"><![CDATA[wishlist]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[regular expression for a fax number]]></title>
  <link>https://nilleb.wordpress.com/2008/05/20/regular-expression-for-a-fax-number/</link>
  <pubDate>Tue, 20 May 2008 08:30:14 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=8</guid>
  <description/>
  <content:encoded><![CDATA[pas vraiment optimisé, mais c'est un début.
<pre>(Tel.*?|Fax.*?)[\ \/\(\)\.\+0-9\-]{7,20}</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2008-05-20 10:30:14</wp:post_date>
  <wp:post_date_gmt>2008-05-20 08:30:14</wp:post_date_gmt>
  <wp:post_modified>2008-10-04 10:36:46</wp:post_modified>
  <wp:post_modified_gmt>2008-10-04 08:36:46</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>regular-expression-for-a-fax-number</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="designer"><![CDATA[designer]]></category>
  <category domain="post_tag" nicename="faxnumber"><![CDATA[faxnumber]]></category>
  <category domain="post_tag" nicename="regex"><![CDATA[regex]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Email Address]]></title>
  <link>https://nilleb.wordpress.com/about/monadresse/</link>
  <pubDate>Tue, 20 May 2008 09:55:43 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.files.wordpress.com/2008/05/monadresse.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[email address of the author]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2008-05-20 11:55:43</wp:post_date>
  <wp:post_date_gmt>2008-05-20 09:55:43</wp:post_date_gmt>
  <wp:post_modified>2008-05-20 11:55:43</wp:post_modified>
  <wp:post_modified_gmt>2008-05-20 09:55:43</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>monadresse</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://nilleb.files.wordpress.com/2008/05/monadresse.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attached_file</wp:meta_key>
    <wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/734/3746092/files/2008/05/monadresse.png]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_metadata</wp:meta_key>
    <wp:meta_value><![CDATA[a:5:{s:5:"width";i:1380;s:6:"height";i:180;s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:85:"/home/wpcom/public_html/wp-content/blogs.dir/734/3746092/files/2008/05/monadresse.png";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[what a nightmare (was: how to use the Sales_DocumentType at the item level)]]></title>
  <link>https://nilleb.wordpress.com/?p=10</link>
  <pubDate>Wed, 21 May 2008 11:52:53 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=10</guid>
  <description/>
  <content:encoded><![CDATA[after one day spent searching a good way to modify the CustomSimulateSalesOrder.vbs, with the help of Cédric, and passing by other bugs, we have finally written a portion of code which can use this feature.

The same feature can be implemented by PSs all over the world. Phew!

I am tired. I have a strong headache, I cannot wait the moment when I will go home this evening.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2008-05-21 13:52:53</wp:post_date>
  <wp:post_date_gmt>2008-05-21 11:52:53</wp:post_date_gmt>
  <wp:post_modified>2008-05-21 13:52:53</wp:post_modified>
  <wp:post_modified_gmt>2008-05-21 11:52:53</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-a-nightmare-was-how-to-use-the-sales_documenttype-at-the-item-level</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="creation"><![CDATA[creation]]></category>
  <category domain="post_tag" nicename="headache"><![CDATA[headache]]></category>
  <category domain="post_tag" nicename="salesorder"><![CDATA[salesorder]]></category>
  <category domain="post_tag" nicename="sap"><![CDATA[sap]]></category>
  <category domain="post_tag" nicename="simulation"><![CDATA[simulation]]></category>
  <category domain="post_tag" nicename="sop"><![CDATA[sop]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="work"><![CDATA[work]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[use an xml file as a python dictionary]]></title>
  <link>https://nilleb.wordpress.com/2008/05/23/use-an-xml-file-as-a-python-dictionary/</link>
  <pubDate>Fri, 23 May 2008 13:43:34 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=11</guid>
  <description/>
  <content:encoded><![CDATA[well, I wanted something like this, to manage a configuration file.

I have done this today, in python. It seems to work with ElementTree and lxml.

It's available on the assembla SVN, I'll probably search a way to publish it elsewhere on the net, too.

I don't think it's complete, but it's a beginning. It's also full of things to fix, handle in a better way, and so on.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2008-05-23 15:43:34</wp:post_date>
  <wp:post_date_gmt>2008-05-23 13:43:34</wp:post_date_gmt>
  <wp:post_modified>2008-10-04 10:35:53</wp:post_modified>
  <wp:post_modified_gmt>2008-10-04 08:35:53</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>use-an-xml-file-as-a-python-dictionary</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dev"><![CDATA[dev]]></category>
  <category domain="post_tag" nicename="dictionary"><![CDATA[dictionary]]></category>
  <category domain="post_tag" nicename="elementtree"><![CDATA[elementtree]]></category>
  <category domain="post_tag" nicename="lxml"><![CDATA[lxml]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <category domain="post_tag" nicename="xpath"><![CDATA[xpath]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[run anything written in an xml file]]></title>
  <link>https://nilleb.wordpress.com/?p=12</link>
  <pubDate>Fri, 23 May 2008 13:46:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=12</guid>
  <description/>
  <content:encoded><![CDATA[well, the runner is almost ready. it can execute and copy, for the moment, and with not so much options.

but such a program is already apt to help me in everyday work with the esker platform.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2008-05-23 15:46:15</wp:post_date>
  <wp:post_date_gmt>2008-05-23 13:46:15</wp:post_date_gmt>
  <wp:post_modified>2008-05-23 15:46:15</wp:post_modified>
  <wp:post_modified_gmt>2008-05-23 13:46:15</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>run-anything-written-in-an-xml-file</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="configuration"><![CDATA[configuration]]></category>
  <category domain="post_tag" nicename="edp"><![CDATA[edp]]></category>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="runner"><![CDATA[runner]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[and the runner is...]]></title>
  <link>https://nilleb.wordpress.com/2008/05/28/and-the-runner-is/</link>
  <pubDate>Wed, 28 May 2008 15:56:09 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=13</guid>
  <description/>
  <content:encoded><![CDATA[well, in the spare time I have coded the software which has been in my wishlist for a few weeks: the runner.

runner.py is a small program which takes an xml configuration file as input, manages the actions defined for each item in this configuration and checks that they've correctly been performed.

in a couple of lines (they're almost the same in python):
<pre>configuration = parse(xmlsource)
for priority in configuration.priorities:
    play(priority)
    windup(priority)</pre>
and play is like the following
<pre>for each operation in configuration.operations[priority]:
    eval("self."+operation.get('type') + "(operation)")</pre>
and the windup is like the following
<pre>for each operation in configuration.operations[priority]:</pre>
<pre>    eval("self."+operation.get('type') + "(operation)")</pre>
voila, c'est tout.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2008-05-28 17:56:09</wp:post_date>
  <wp:post_date_gmt>2008-05-28 15:56:09</wp:post_date_gmt>
  <wp:post_modified>2008-10-04 10:35:18</wp:post_modified>
  <wp:post_modified_gmt>2008-10-04 08:35:18</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>and-the-runner-is</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="parser"><![CDATA[parser]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="runner"><![CDATA[runner]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[wishlist: qa wiki]]></title>
  <link>https://nilleb.wordpress.com/?p=14</link>
  <pubDate>Fri, 06 Jun 2008 09:46:13 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=14</guid>
  <description/>
  <content:encoded><![CDATA[the site already exists.

we know a lot of things. ways to fix problems.

and we do not have a way to propagate these infos.

it's a pity, I think. we should revive the qa wiki on ly-as-ondemand, when we pass to the <em>next generation</em> common (as in 'common to all qas') machine...]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2008-06-06 11:46:13</wp:post_date>
  <wp:post_date_gmt>2008-06-06 09:46:13</wp:post_date_gmt>
  <wp:post_modified>2008-06-06 11:46:13</wp:post_modified>
  <wp:post_modified_gmt>2008-06-06 09:46:13</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wishlist-qa-wiki</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ly-as-ondemand"><![CDATA[ly-as-ondemand]]></category>
  <category domain="post_tag" nicename="ly-qa"><![CDATA[ly-qa]]></category>
  <category domain="post_tag" nicename="qa"><![CDATA[qa]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wiki"><![CDATA[wiki]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[tiffMerger]]></title>
  <link>https://nilleb.wordpress.com/?p=15</link>
  <pubDate>Fri, 06 Jun 2008 09:55:34 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=15</guid>
  <description/>
  <content:encoded><![CDATA[I have completed the relooking (and the bug hunting) of the TIFF Merger.
Since today is available for use on the \\ly-qa-bellin\SOFTWARE share. The code is available also on SVN, using appropriate credentials.

As usual, it is available as a binary file (compiled). The python source is available separately.
It depends on an internal tool called TifTool, so it is nearly un-redistributable, at the moment.

It is practical to generate multipage documents, which eventually include more following copies of the same document (i.e. a kind of transmission error)

In the future, I'd love to see it completed with some -translation,rotation,noise- on the documents. I should take a look at python libraries.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2008-06-06 11:55:34</wp:post_date>
  <wp:post_date_gmt>2008-06-06 09:55:34</wp:post_date_gmt>
  <wp:post_modified>2008-06-06 11:55:34</wp:post_modified>
  <wp:post_modified_gmt>2008-06-06 09:55:34</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tiffmerger</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="document"><![CDATA[document]]></category>
  <category domain="post_tag" nicename="merge"><![CDATA[merge]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="test"><![CDATA[test]]></category>
  <category domain="post_tag" nicename="tiffmerger"><![CDATA[tiffmerger]]></category>
  <category domain="post_tag" nicename="tiftool"><![CDATA[tiftool]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[the SAP wiki]]></title>
  <link>https://nilleb.wordpress.com/?p=16</link>
  <pubDate>Fri, 06 Jun 2008 09:58:03 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=16</guid>
  <description/>
  <content:encoded><![CDATA[on the internal Esker network, a SAP wiki is available to support SAP technicians:

<a href="http://10.1.64.113/wiki/index.php/Main_Page">http://10.1.64.113/wiki/index.php/Main_Page</a>

changed on 23062008:

<a href="http://ly-debian-wiki/wiki/index.php/Main_Page">http://ly-debian-wiki/wiki/index.php/Main_Page</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2008-06-06 11:58:03</wp:post_date>
  <wp:post_date_gmt>2008-06-06 09:58:03</wp:post_date_gmt>
  <wp:post_modified>2008-06-23 12:16:40</wp:post_modified>
  <wp:post_modified_gmt>2008-06-23 10:16:40</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-sap-wiki</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="sap"><![CDATA[sap]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wiki"><![CDATA[wiki]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[smallscripts.setuppy]]></title>
  <link>https://nilleb.wordpress.com/?p=17</link>
  <pubDate>Mon, 09 Jun 2008 11:43:59 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/2008/06/09/scmallscriptssetuppy/</guid>
  <description/>
  <content:encoded><![CDATA[that's done, too.
a script to register Python in your Windows system. this works everywhere on esker.corp.
available as precompiled executable, on "\\ly-qa-bellin\Software\Setup Python".
and then?
and then you will be able to run python scripts on your box. any .py file will be recognized as executable, Python will be in your path.
<a class="performancingtags" rel="tag" href="http://technorati.com/tag/eskercorp">
</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2008-06-09 13:43:59</wp:post_date>
  <wp:post_date_gmt>2008-06-09 11:43:59</wp:post_date_gmt>
  <wp:post_modified>2008-06-09 13:44:32</wp:post_modified>
  <wp:post_modified_gmt>2008-06-09 11:44:32</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scmallscriptssetuppy</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="eskercorp"><![CDATA[eskercorp]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="setup"><![CDATA[setup]]></category>
  <category domain="post_tag" nicename="setuppy"><![CDATA[setuppy]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[did you know the /all option of the GDREdit?]]></title>
  <link>https://nilleb.wordpress.com/?p=18</link>
  <pubDate>Mon, 09 Jun 2008 15:03:03 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=18</guid>
  <description/>
  <content:encoded><![CDATA[GDREdit.exe /all

This will

-slow down the boot up of the GDREdit by a factor 10

-but also enable the editing of rules with all the imaginable options]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>2008-06-09 17:03:03</wp:post_date>
  <wp:post_date_gmt>2008-06-09 15:03:03</wp:post_date_gmt>
  <wp:post_modified>2008-06-09 17:03:03</wp:post_modified>
  <wp:post_modified_gmt>2008-06-09 15:03:03</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>did-you-know-the-all-option-of-the-gdredit</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="all"><![CDATA[all]]></category>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="gdredit"><![CDATA[GDREdit]]></category>
  <category domain="post_tag" nicename="library"><![CDATA[library]]></category>
  <category domain="post_tag" nicename="option"><![CDATA[option]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[un tas de choses interessantes...]]></title>
  <link>https://nilleb.wordpress.com/?p=19</link>
  <pubDate>Mon, 09 Jun 2008 15:22:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=19</guid>
  <description/>
  <content:encoded><![CDATA[the following lines are the first part of a rlx file. you will find only a subset of these lines in new rules you create. so, you must know all the other lines by hearth, if you want to use them in your rules.

Sometimes you can find them useful, so here in the follow, the complete list of the ilg that you find in the Sales order Data Capture rule.
<pre>    &lt;USES&gt;
        &lt;EXCLUDE href="AddrSrchTest.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;INCLUDE href="common.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;INCLUDE href="ExecuteQueryConnector.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;INCLUDE href="extract_areas_before_teach.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;INCLUDE href="fts.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;INCLUDE href="sap.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;EXCLUDE href="sap_socustomer.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="sap_somaterial.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="sap_sopartnerfunc.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;INCLUDE href="tools.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;EXCLUDE href="UpdateParent.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;INCLUDE href="xml.ilg"&gt;&lt;/INCLUDE&gt;
        &lt;EXCLUDE href="intl.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="attach.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="FaxValidation.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="merge.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="modlc.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="prices.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="areas.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="delegations.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="prices2.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="ReplaceTags.ilg"&gt;&lt;/EXCLUDE&gt;
        &lt;EXCLUDE href="AppExchangeAttachement.ilg"&gt;&lt;/EXCLUDE&gt;
    &lt;/USES&gt;</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2008-06-09 17:22:15</wp:post_date>
  <wp:post_date_gmt>2008-06-09 15:22:15</wp:post_date_gmt>
  <wp:post_modified>2008-06-11 17:52:49</wp:post_modified>
  <wp:post_modified_gmt>2008-06-11 15:52:49</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>un-tas-de-choses-interessantes</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="designer"><![CDATA[designer]]></category>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="gdredit"><![CDATA[GDREdit]]></category>
  <category domain="post_tag" nicename="rlx"><![CDATA[rlx]]></category>
  <category domain="post_tag" nicename="rules"><![CDATA[rules]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[temp/ruleLg: how to prevent the deletion of the sales order currently being simulated/created]]></title>
  <link>https://nilleb.wordpress.com/?p=20</link>
  <pubDate>Wed, 11 Jun 2008 15:50:39 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=20</guid>
  <description/>
  <content:encoded><![CDATA[Program/GDRInlines/sap.ilg:

search for <strong>remove</strong>

you will find two occurrencies, comment out (//) the xmlFile one.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2008-06-11 17:50:39</wp:post_date>
  <wp:post_date_gmt>2008-06-11 15:50:39</wp:post_date_gmt>
  <wp:post_modified>2008-06-11 18:01:55</wp:post_modified>
  <wp:post_modified_gmt>2008-06-11 16:01:55</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>temprulelg-how-to-prevent-the-deletion-of-the-sales-order-currently-being-simulated</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="create"><![CDATA[create]]></category>
  <category domain="post_tag" nicename="rulelg"><![CDATA[rulelg]]></category>
  <category domain="post_tag" nicename="sales-orders"><![CDATA[sales orders]]></category>
  <category domain="post_tag" nicename="sap"><![CDATA[sap]]></category>
  <category domain="post_tag" nicename="simulate"><![CDATA[simulate]]></category>
  <category domain="post_tag" nicename="temp"><![CDATA[temp]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[how to enable the compression on IIS7]]></title>
  <link>https://nilleb.wordpress.com/2008/06/13/how-to-enable-the-compression-on-iis7/</link>
  <pubDate>Fri, 13 Jun 2008 09:49:04 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=22</guid>
  <description/>
  <content:encoded><![CDATA[OK, the static compression is already enabled by default. But when you need to compress the Document Manager pages, you need the dynamic compression.

So, you may proceed as follows:

install the Dynamic compression feature for your IIS role (I am speaking about Windows 2008, so...)

type the command
<pre>%systemroot%\System32\inetsrv\appcmd set config -section:urlCompression /doDynamic
Compression:true</pre>
and then, if you do not like 7 (default) as compression level, you can change it with
<pre>%windir%\system32\inetsrv\appcmd.exe set config -section:httpCompression -[name='gzip'].dynamicCompressionLevel:&lt;value&gt;

%windir%\system32\inetsrv\appcmd.exe set config -section:httpCompression -[name='gzip'].staticCompressionLevel:&lt;value&gt;</pre>
as a reference:

<a href="http://blogs.iis.net/ksingla/archive/2006/06/13/changes-to-compression-in-iis7.aspx">IIS.NET blog</a>

<a href="http://forums.iis.net/rss.aspx?ForumID=1046&amp;PostID=1647413">IIS.NET forum thread</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>22</wp:post_id>
  <wp:post_date>2008-06-13 11:49:04</wp:post_date>
  <wp:post_date_gmt>2008-06-13 09:49:04</wp:post_date_gmt>
  <wp:post_modified>2008-10-04 10:32:49</wp:post_modified>
  <wp:post_modified_gmt>2008-10-04 08:32:49</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-enable-the-compression-on-iis7</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="compression"><![CDATA[compression]]></category>
  <category domain="post_tag" nicename="content-encoding"><![CDATA[content-encoding]]></category>
  <category domain="post_tag" nicename="documentmanager"><![CDATA[documentmanager]]></category>
  <category domain="post_tag" nicename="http"><![CDATA[http]]></category>
  <category domain="post_tag" nicename="iis7"><![CDATA[iis7]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows2008"><![CDATA[windows2008]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[how to use the servemanagercmd]]></title>
  <link>https://nilleb.wordpress.com/2008/06/17/how-to-use-the-servemanagercmd/</link>
  <pubDate>Tue, 17 Jun 2008 14:19:14 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=23</guid>
  <description/>
  <content:encoded><![CDATA[once you've installed your Windows 2008 server, you would like to install a set of roles/services/features that you haven't by default.

And then, you would like to do it via a commandline, to tell the same thing to other people, perhaps working in your services.

Well, here's the black magic explained:

<a href="http://technet2.microsoft.com/windowsserver2008/en/library/e7edce1d-442c-4ec3-b324-c748e4f937551033.mspx?mfr=true">http://technet2.microsoft.com/windowsserver2008/en/library/e7edce1d-442c-4ec3-b324-c748e4f937551033.mspx?mfr=true</a>

I love the -whatif option.

<a href="http://technet.microsoft.com/en-us/magazine/cc194390(TechNet.10).aspx">http://technet.microsoft.com/en-us/magazine/cc194390(TechNet.10).aspx</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>23</wp:post_id>
  <wp:post_date>2008-06-17 16:19:14</wp:post_date>
  <wp:post_date_gmt>2008-06-17 14:19:14</wp:post_date_gmt>
  <wp:post_modified>2008-10-04 10:31:52</wp:post_modified>
  <wp:post_modified_gmt>2008-10-04 08:31:52</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-use-the-servemanagercmd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="servermanager"><![CDATA[servermanager]]></category>
  <category domain="post_tag" nicename="servermanagercmd"><![CDATA[servermanagercmd]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="whatif"><![CDATA[whatif]]></category>
  <category domain="post_tag" nicename="windows2008"><![CDATA[windows2008]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c3bc2c9d535606441dda7fd6f1367795</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_157555888a751d3fa9da4e7421eae696</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4081645dc2d0466d3bbb4243652c8a13</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_170c3b1f8d9146151326a8e6dbd61195</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[what about showxml.js?]]></title>
  <link>https://nilleb.wordpress.com/?p=24</link>
  <pubDate>Tue, 17 Jun 2008 14:24:46 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=24</guid>
  <description/>
  <content:encoded><![CDATA[showxml.js, what's this thing?

- you can find it under Program/uninst

- it helps you to execute DBManage queries as the platform would execute them.

- its syntax is the following:

cscript showxml.js TABLENAME filter

where TABLENAME can for example be EWIPROFILE

and filter can be like msn=*, or (&amp;(AccountId='')(Role=simpleUser)), or.. (put here yours)

in case of doubts, you can always take a look at the traces of the DBManage\SQL requests, and get a real filter, on a real request :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2008-06-17 16:24:46</wp:post_date>
  <wp:post_date_gmt>2008-06-17 14:24:46</wp:post_date_gmt>
  <wp:post_modified>2008-06-18 11:45:06</wp:post_modified>
  <wp:post_modified_gmt>2008-06-18 09:45:06</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-about-showxmljs</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="filter"><![CDATA[filter]]></category>
  <category domain="post_tag" nicename="query"><![CDATA[query]]></category>
  <category domain="post_tag" nicename="showxml"><![CDATA[showxml]]></category>
  <category domain="post_tag" nicename="showxml-js"><![CDATA[showxml.js]]></category>
  <category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[E7C tests: responsiveness to network faults]]></title>
  <link>https://nilleb.wordpress.com/?p=26</link>
  <pubDate>Thu, 26 Jun 2008 14:07:51 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=26</guid>
  <description/>
  <content:encoded><![CDATA[ie: what do we do with the esker mailbox in the main page of the connector configuration?

Procedure

Install all the following systems

- Exchange 2007 server

- Exchange 2003 server

- EDP platform

- Two client platforms (even one could be fine. it depends only on you.)

Now configure an esker connector on both the Exchange servers. Do not yet start the esker services.

1. Once you're done, start the Esker service on the E3 server. Verify that you can send an exchange message and a fax, through this server.

2. Now cut the network connection to the EDP machine.

3. Verify that you're getting a notification message on your client (after a while).

4. Enable again the connection to your EDP server.

5. Verify that you're getting a notification about the re established connection.

6. Stop the connector service on the E3 server.

Fine, now repeat all the steps on the Exchange 2007 server.

If anything differes, log Lionel.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2008-06-26 16:07:51</wp:post_date>
  <wp:post_date_gmt>2008-06-26 14:07:51</wp:post_date_gmt>
  <wp:post_modified>2008-06-26 16:13:00</wp:post_modified>
  <wp:post_modified_gmt>2008-06-26 14:13:00</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>e7c-tests-responsiveness-to-network-faults</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="2003"><![CDATA[2003]]></category>
  <category domain="post_tag" nicename="2007"><![CDATA[2007]]></category>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="exchange"><![CDATA[Exchange]]></category>
  <category domain="post_tag" nicename="exchange-connector"><![CDATA[exchange connector]]></category>
  <category domain="post_tag" nicename="network-failure"><![CDATA[network failure]]></category>
  <category domain="post_tag" nicename="notification"><![CDATA[notification]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[developing with Glade]]></title>
  <link>https://nilleb.wordpress.com/2008/07/15/developing-with-glade/</link>
  <pubDate>Tue, 15 Jul 2008 08:29:20 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=27</guid>
  <description/>
  <content:encoded><![CDATA[wow. wonderful.

these are the first thoughts after the implementation of a couple of widgets, on a simple and sample Gtk.Window.

First of all, Glade allows the separation of interface and code.

Glade enables you the design of a GUI. Eclipse, or your favourite Python IDE, eanbles you the implementation of the methods connected to the widgets' signals.

For the first time, I feel able to develop rapidly and efficiently using free (as in free speech) tools.

won-der-ful.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>27</wp:post_id>
  <wp:post_date>2008-07-15 10:29:20</wp:post_date>
  <wp:post_date_gmt>2008-07-15 08:29:20</wp:post_date_gmt>
  <wp:post_modified>2008-07-15 10:29:20</wp:post_modified>
  <wp:post_modified_gmt>2008-07-15 08:29:20</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>developing-with-glade</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="post_tag" nicename="glade"><![CDATA[glade]]></category>
  <category domain="post_tag" nicename="gtk"><![CDATA[gtk]]></category>
  <category domain="post_tag" nicename="gui"><![CDATA[GUI]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[ESKER SAP SOP/AP: generating random data]]></title>
  <link>https://nilleb.wordpress.com/?p=28</link>
  <pubDate>Fri, 22 Aug 2008 12:59:30 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=28</guid>
  <description/>
  <content:encoded><![CDATA[I'm writing a couple rules to generate random sales orders starting from the Esker platform database (which should contain interesting data about customers/materials/partners).

at the moment the rules are not complete, since at least a couple bugs are affecting the GDREdit. A workin' version of these rules is available on ly-as-ondemand\qa2007\perso\ivo\Projects - Unicode\bricol\.

what still needs to be done?

. date formatting (now available in the v2 rule, still not working).

. re-ordering of fields and queries (cannot complete it since of bugs)

. externalization of parameters (if an external variable has a value, use this one. otherwise, go with the default values.)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2008-08-22 14:59:30</wp:post_date>
  <wp:post_date_gmt>2008-08-22 12:59:30</wp:post_date_gmt>
  <wp:post_modified>2008-08-22 15:00:49</wp:post_modified>
  <wp:post_modified_gmt>2008-08-22 13:00:49</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>esker-sap-sopap-generating-random-data</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="data"><![CDATA[data]]></category>
  <category domain="post_tag" nicename="esker"><![CDATA[esker]]></category>
  <category domain="post_tag" nicename="random"><![CDATA[random]]></category>
  <category domain="post_tag" nicename="sales-orders"><![CDATA[sales orders]]></category>
  <category domain="post_tag" nicename="sap"><![CDATA[sap]]></category>
  <category domain="post_tag" nicename="sopap"><![CDATA[sopap]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[javascript code to use WScript parameters]]></title>
  <link>https://nilleb.wordpress.com/2008/08/27/javascript-code-to-use-wscript-parameters/</link>
  <pubDate>Wed, 27 Aug 2008 12:52:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=32</guid>
  <description/>
  <content:encoded><![CDATA[The following code makes use of the WScript.Arguments.Named and Unnamed properties to retrieve and use the WshNamed and WshUnnamed objects.

You can find something on MSDN about this topic, but this is a useful and till-now-missing example (IMHO).

For example, call it with "cscript /Nologo libparam.js /debug bla=bla key=value /verbose".
<pre>var argsNamed = WScript.Arguments.Named;
var argsUnnamed = WScript.Arguments.Unnamed;

function Parameters (argumentsNamed, argumentsUnnamed, splitCharacter) {
    this.splitChar = splitCharacter;
	this.named = argumentsNamed;
    this.unnamed = argumentsUnnamed;
	this.unnamedOptions = new Array()
	
	this.decomposeUnnamedOptions = function ()
	{
		if (typeof(this.unnamed) == 'undefined')
			return
		//WScript.Echo("this.unnamed.length: " + this.unnamed.length);
		for (var j = 0; j  2)
				continue;
			if(typeof(parts[1]) == 'undefined')
				this.unnamedOptions[parts[0]] = 'undefined';
			this.unnamedOptions[parts[0]] = parts[1];
		}
	}

	this.debug = function () {
		WScript.Echo("Parameters class inited.");
		WScript.Echo("There are " + this.named.length + " named arguments.");
		WScript.Echo("There are " + this.unnamed.length + " unnamed arguments.");
		WScript.Echo("The split character is '" + this.splitChar + "'");
		WScript.Echo("The named args are "+this.named.length+" :");
		for (var j in this.named) {
			WScript.Echo("named(" + j+"):"+this.named.Item(j));
		}
		WScript.Echo("The unnamed args are "+this.unnamed.length+" :");
		for (var j = 0; j &lt; this.unnamed.length; j = j + 1) {
			WScript.Echo("unnamed(" + j+"):"+this.unnamed.Item(j));
		}
	}

}


params = new Parameters(argsNamed, argsUnnamed, "=");

params.decomposeUnnamedOptions();

if (params.named.Exists("debug"))
	params.debug();

if (params.named.Exists("verbose"))
	WScript.Echo("---begin processing unnamed args");

if (!params.named.Exists("noresults")) {
	for (var i in params.unnamedOptions) {
		WScript.Echo('key is: ' + i + ', value is: ' + params.unnamedOptions[i]);
	}
}

if (params.named.Exists("verbose"))
	WScript.Echo("---end processing unnamed args");
</pre>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2008-08-27 14:52:15</wp:post_date>
  <wp:post_date_gmt>2008-08-27 12:52:15</wp:post_date_gmt>
  <wp:post_modified>2009-08-25 08:52:49</wp:post_modified>
  <wp:post_modified_gmt>2009-08-25 07:52:49</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>javascript-code-to-use-wscript-parameters</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="arguments"><![CDATA[arguments]]></category>
  <category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="wscript"><![CDATA[wscript]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_dbe1ebd9fba2eeb357e5beee5e85e920</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ac8f67e0678c1dcb3acca826a0da1770</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_96f4f7d01ef7851e38d3fb31eb1c57e5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9d50f7d9c2f34e846fa589ff94c3c502</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_141a958e78ec6e8f30297f5961e7ce71</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[Ivo]]></wp:comment_author>
    <wp:comment_author_email>ivo.bellinsalarin+wordpress@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://iagosbar.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>193.251.27.243</wp:comment_author_IP>
    <wp:comment_date>2008-08-27 15:01:10</wp:comment_date>
    <wp:comment_date_gmt>2008-08-27 13:01:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[perdincibaccoliona! wordpress re-formats the preformatted....]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>56243</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2008-08-27 13:01:10]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[psycle]]></wp:comment_author>
    <wp:comment_author_email>ray_rush@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://</wp:comment_author_url>
    <wp:comment_author_IP>207.34.120.71</wp:comment_author_IP>
    <wp:comment_date>2009-08-11 15:02:49</wp:comment_date>
    <wp:comment_date_gmt>2009-08-11 14:02:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for the example!  Just what I was looking for.  I'm a little lost though.  There is an error in the for loop of the decomposeUnnamedOptions method.  Looks like Wordpress ate some characters.  Can you please clarify that part?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>3775462</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2009-08-11 14:02:49]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>7</wp:comment_id>
    <wp:comment_author><![CDATA[Ivo]]></wp:comment_author>
    <wp:comment_author_email>ivo.bellinsalarin+wordpress@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://iagosbar.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>193.251.27.243</wp:comment_author_IP>
    <wp:comment_date>2009-08-12 09:46:25</wp:comment_date>
    <wp:comment_date_gmt>2009-08-12 08:46:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[a copy of the script is available at the address
http://nilleb.com/pub/opencode/libparam.js]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>6</wp:comment_parent>
    <wp:comment_user_id>56243</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2009-08-12 08:46:25]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title><![CDATA[Gino 0.2]]></title>
  <link>https://nilleb.wordpress.com/2008/08/29/gino-02/</link>
  <pubDate>Fri, 29 Aug 2008 15:46:16 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=41</guid>
  <description/>
  <content:encoded><![CDATA[Gino 0.2 has hit the SVN. (What's Gino? <a href="http://www.assembla.com/wiki/show/etools/Gino">http://www.assembla.com/wiki/show/etools/Gino</a>)
It is delivered with a nice setup.py. With the help of py2exe, it is possible to make it a windows binary, easily portable.
The next steps? fix some(many) bugs, and prepare a Inno setup to deploy it.

If you want to try it, you can get the sources from assembla.com (http://svn2.assembla.com/svn/etools). (What are the etools? <a href="http://www.assembla.com/wiki/show/etools/Gino">http://www.assembla.com/wiki/show/etools/Gino</a>).

This project has been written with eclipse and pydev extensions. It isn't clear which kind of license it will use, yet.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>41</wp:post_id>
  <wp:post_date>2008-08-29 17:46:16</wp:post_date>
  <wp:post_date_gmt>2008-08-29 15:46:16</wp:post_date_gmt>
  <wp:post_modified>2008-08-29 17:59:02</wp:post_modified>
  <wp:post_modified_gmt>2008-08-29 15:59:02</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gino-02</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="post_tag" nicename="etools"><![CDATA[etools]]></category>
  <category domain="post_tag" nicename="gino"><![CDATA[gino]]></category>
  <category domain="post_tag" nicename="glade"><![CDATA[glade]]></category>
  <category domain="post_tag" nicename="inno"><![CDATA[inno]]></category>
  <category domain="post_tag" nicename="logging"><![CDATA[logging]]></category>
  <category domain="post_tag" nicename="lxml"><![CDATA[lxml]]></category>
  <category domain="post_tag" nicename="py2exe"><![CDATA[py2exe]]></category>
  <category domain="post_tag" nicename="pydev-extensions"><![CDATA[pydev extensions]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml-editor"><![CDATA[xml editor]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e64872248e46de76b798cef6e17b0c26</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9b1d379253f25b40f27c75b1a2fd2dfd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_38fa4975fcdd5a1901c83b308a351a1b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Filesystem Changes Monitor (FSCM) 0.1]]></title>
  <link>https://nilleb.wordpress.com/2008/09/19/filesystem-changes-monitor-fscm/</link>
  <pubDate>Fri, 19 Sep 2008 12:13:15 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=48</guid>
  <description/>
  <content:encoded><![CDATA[The filesystem changes monitor (fscm) is a systray applet which allows you to inspect a set of filesystem entities for changes. when any change is detected, it changes its appearance.
it's the ideal companion for a quality assurance engineer who wants to be notified upon the creation of new memory dumps/exceptions stacks/logs updates/etc.

It has hit the svn yesterday. It's available for download from assembla.com. As usual, it is licensed under the GPL.

It uses icons found on the net (no license found for these icons), a systray icon code based on pywin32 (found on the net this too, no license as well), and pygtk. The watchdog code is mine, I haven't found anything suitable.

<strong>Links:</strong>
<ul>
<li>etools project <a href="http://www.assembla.com/wiki/show/etools">§</a></li>
<li>fscm download page <a href="http://www.assembla.com/spaces/etools/documents/afYRTiHKqr3B0Gab7jnrAJ">§</a></li>
</ul>

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2008-09-19 14:13:15</wp:post_date>
  <wp:post_date_gmt>2008-09-19 12:13:15</wp:post_date_gmt>
  <wp:post_modified>2008-09-19 14:18:10</wp:post_modified>
  <wp:post_modified_gmt>2008-09-19 12:18:10</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>filesystem-changes-monitor-fscm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="filesystem"><![CDATA[filesystem]]></category>
  <category domain="post_tag" nicename="fscm"><![CDATA[fscm]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="pywin32"><![CDATA[pywin32]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="watchdog"><![CDATA[watchdog]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[news from the SVN]]></title>
  <link>https://nilleb.wordpress.com/2008/10/03/news-from-the-svn/</link>
  <pubDate>Fri, 03 Oct 2008 14:24:35 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=52</guid>
  <description/>
  <content:encoded><![CDATA[this week's edition of "news from the SVN" follows:

- XMLFinder: a graphical xpath evaluator (PyGTK)
- XMLFindTool and XMLTreeView: two classes which implement the Gino and XMLFinder cores; XMLFinder uses both the classes
- something doesn't work in the CompressedFile class; under investigation

no binary distributions of these tools are provided, for now

notice: we have moved, once more. this blog is now available also on <a href="http://tec.nilleb.com">tec.nilleb.com</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>52</wp:post_id>
  <wp:post_date>2008-10-03 16:24:35</wp:post_date>
  <wp:post_date_gmt>2008-10-03 14:24:35</wp:post_date_gmt>
  <wp:post_modified>2008-10-03 16:37:06</wp:post_modified>
  <wp:post_modified_gmt>2008-10-03 14:37:06</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>news-from-the-svn</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gino"><![CDATA[gino]]></category>
  <category domain="post_tag" nicename="ngbasics"><![CDATA[ngbasics]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <category domain="post_tag" nicename="xmlfinder"><![CDATA[xmlfinder]]></category>
  <category domain="post_tag" nicename="xmlfindtool"><![CDATA[xmlfindtool]]></category>
  <category domain="post_tag" nicename="xpath"><![CDATA[xpath]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[CV]]></title>
  <link>https://nilleb.wordpress.com/cv-keywords/</link>
  <pubDate>Sat, 04 Oct 2008 08:29:47 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?page_id=57</guid>
  <description/>
  <content:encoded><![CDATA[My Curriculum Vitae is available for download <a title="Ivo Bellin Salarin, CV" href="https://drive.google.com/open?id=154ZAt9PyrgInXpUCvIKtEseko1bQPHoO">as a PDF file</a>.

In the follow you can find a list of "<strong>keywords</strong>: what I have done with this". This will hopefully tell you something more about my technical skills.

<strong>SCRUM Framework</strong>: <a href="https://www.scrum.org/user/590036">PSM I</a> and <a href="https://www.scrum.org/user/590036">PSPO I</a> certifications

<strong>search engines</strong>: I have experience with <a href="https://www.lumapps.com/blog-post/google-cloud-search-integration/">Google</a> <a href="https://www.lumapps.com/product/google-cloud-search/">Cloud</a> <a href="https://www.lumapps.com/fr/blog-post/google-cloud-search-est-disponible-dans-lumapps/">Search</a> and ElasticSearch

<strong>product owner</strong>: that's my title today. My team has realized the Google Cloud Search integration at LumApps (aka Melania), and the Native Search Rework (aka Brigitte)

<strong>perl</strong>: frozen-bubble PTP (peer-to-peer and network exchange support for a famous coin-up)

<strong>python</strong>: github.com/nilleb.ccguard (prevents code quality indicators regressions), assembla.com/etools (gone - xml graphic tools, tests engines, automation of repetitive testing tasks), web crawler to extract metadata about medias

<strong>C/C++</strong>: L4Ka:Pistachio (microkernel-&gt;implemented communicating processes), jidVolo (flight simulator using Massachusetts maps)

<strong>C#</strong>: No public or open-source project with this language. The NDA I signed with my past employers was too strict to contribute.

<strong>java</strong>: MSTest Jenkins plugin, MM-DOSE (a branch of the H-DOSE semantic search engine, used to index multimedia contents), Converter (an applet calling the conversion services exported by a webservice)

<strong>html, xhtml, xml, xpath</strong>: used for sites, for softwares, for thesis (ontologies)

<strong>tests</strong>: <strong>functional testing</strong> (Sytel Reply, 06-2006-&gt;12-2006; Esker SA, 01-2007-&gt;01/2011); <strong>unit testing</strong> was used for developed softwares; <strong>automated testing</strong> was used for some web applications and format converters, as well as for printer drivers; <strong>load tests</strong> and <strong>stress tests</strong> were performed on sensitive components of my employer's production architecture; <strong>security tests</strong> were performed on DMZ components of the production environment.

<strong>linux</strong>: worked on since 1996. Ubuntu, Gentoo, Debian and RedHat are a subset of the distributions I've experience with.

<strong>windows</strong>: used for everyday work from 2007 to 2016 (development, functional testing, 2003, 2008, up to 2016 and 10)

<strong>docker, containers, kube</strong>: experience as developer; I have used Windows containers on Windows 2016 and I use docker and kube today for python and golang based microservices.

<strong>vmware</strong>: used for everyday work, a long long time ago (workstation, esxi, player)

<strong>exchange 2003/2007 server</strong>: used for functional testing (integration with a 3rd party gateway)

<strong>LDAP, Active Directory</strong>: used for functional testing (the gateway saves its information in the Active Directory database)

<strong>SAP</strong>: used for functional testing (sales orders and accounts payable integration with a web application, it required also the knowledge of BAPI, privileges managements, system management). I worked with the SAP R/3 versions: 4.6C, 4.7, 5.0, 6.0 (aka ECC6).

<strong>DNS, NFS, SMTP, POP, SSH, SSL, FTP, R*, LPR protocol</strong>s: functional testing on server/client applications

<strong>TCP/IP</strong>: well, they're the underlying layers for all the protocols listed above.. I must know them in order to analyze any kind of network transmission

<strong>IPv4</strong> and <strong>IPv6</strong>: the small and the big one. two addressing spaces for IP addresses. I'm experiencing the transition from one to another in the applications I test. Developers are not yet ready to the big one. :-)

<strong>organization</strong>: in the past, chief of the youth section of a local blood donors group. today, responsible for my own projects and for a team of 6 people, as well for the products we realize together.

<strong>collaboration</strong>: worked as team member for about 10 years; today manager of a team of 6 people.

<strong>web applications</strong>: I have tested and built them over the last 12 years! :-) With technologies ranging from .net (C# 3.0 to 7.0), WCF and EntityFramework to python (2.7 and 3.x) on AppEngine (Standard and Flex) to golang on Kubernetes. SaaS has been a leitmotif of my work experience :-)

<strong>SQL</strong>: the products I test use a relational database to store the information. so, SQL is a necessary knowledge in order to analyze the behavior of the application. SQL Server, PostgreSQL, SQLite.

<strong>NoSQL</strong>: experience with Google Datastore (a lot) and Redis (a little)

<strong>GNOME </strong>and<strong> KDE</strong>: two desktop enviroments for Linux. I'm used to use them (and debug them, in case of problems).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>57</wp:post_id>
  <wp:post_date>2008-10-04 10:29:47</wp:post_date>
  <wp:post_date_gmt>2008-10-04 08:29:47</wp:post_date_gmt>
  <wp:post_modified>2020-03-19 23:04:53</wp:post_modified>
  <wp:post_modified_gmt>2020-03-19 22:04:53</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cv-keywords</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[up-to-date sample code for gtksourceview2 (from the svn)]]></title>
  <link>https://nilleb.wordpress.com/2008/10/08/up-to-date-code-for-gtksourceview-from-the-svn/</link>
  <pubDate>Wed, 08 Oct 2008 08:58:41 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=65</guid>
  <description/>
  <content:encoded><![CDATA[<pre>#CREDITS
#http://www.progbox.co.uk/wordpress/?p=300
#DEPENDS: gtksourceview2 and libxml2</pre>
<pre>import gtk
import gtksourceview2</pre>
<pre>win = gtk.Window()</pre>
<pre>bufferS = gtksourceview2.Buffer()
manager = gtksourceview2.LanguageManager()
language = manager.get_language("xml")
#langS.set_mime_types(["text/x-python"])
bufferS.set_language(language)
bufferS.set_highlight_syntax(True)
view = gtksourceview2.View(bufferS)
view.set_show_line_numbers(True)
win.resize(400,400)
win.add(view)</pre>
<pre>win.show_all()
gtk.main()</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2008-10-08 10:58:41</wp:post_date>
  <wp:post_date_gmt>2008-10-08 08:58:41</wp:post_date_gmt>
  <wp:post_modified>2008-10-15 23:02:26</wp:post_modified>
  <wp:post_modified_gmt>2008-10-15 21:02:26</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>up-to-date-code-for-gtksourceview-from-the-svn</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gtk"><![CDATA[gtk]]></category>
  <category domain="post_tag" nicename="gtksourceview"><![CDATA[gtksourceview]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[how to install gtksourceview2 on windows]]></title>
  <link>https://nilleb.wordpress.com/2008/10/08/how-to-install-gtksourceview2-on-windows/</link>
  <pubDate>Wed, 08 Oct 2008 09:05:52 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=67</guid>
  <description/>
  <content:encoded><![CDATA[download and install all the following components:

gtk runtime installer (easier than take all the binaries and put them together)
<a href="http://sourceforge.net/projects/gtk-win/">http://sourceforge.net/projects/gtk-win/</a>

gtksourceview2.4 binaries for win32
<a href="http://ftp.gnome.org/pub/gnome/binaries/win32/gtksourceview/2.4/">http://ftp.gnome.org/pub/gnome/binaries/win32/gtksourceview/2.4/</a>
put them in the gtk runtime lib folder (or somewhere in your path)

pygtksourceview2 installer for win32
<a href="http://ftp.gnome.org/pub/gnome/binaries/win32/pygtksourceview/">http://ftp.gnome.org/pub/gnome/binaries/win32/pygtksourceview/</a>

libxml2, latest version binaries (really take the latest version)
<a href="ftp://xmlsoft.org/libxml2/win32/">ftp://xmlsoft.org/libxml2/win32/</a>
put them in the gtk runtime lib folder (or somewhere in your path)

ok, now you can take the code in the previous post and execute it successfully.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>67</wp:post_id>
  <wp:post_date>2008-10-08 11:05:52</wp:post_date>
  <wp:post_date_gmt>2008-10-08 09:05:52</wp:post_date_gmt>
  <wp:post_modified>2008-10-08 11:06:36</wp:post_modified>
  <wp:post_modified_gmt>2008-10-08 09:06:36</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-install-gtksourceview2-on-windows</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gtksourceview2"><![CDATA[gtksourceview2]]></category>
  <category domain="post_tag" nicename="libxml2"><![CDATA[libxml2]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="win32"><![CDATA[win32]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a724cb79de00969e6a3ca04a98959784</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_12d41b520a2c4fa27cde658d382753cc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2cae71f4734cceec99ca93011f0b6dad</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4150187904cd9520d7b1388bb709c710</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d5d512362a85193147fa82733e7ef923</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_616f4d33a9be08d54814523cdc966616</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Ivo]]></wp:comment_author>
    <wp:comment_author_email>ivo.bellinsalarin+wordpress@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://iagosbar.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>62.23.100.126</wp:comment_author_IP>
    <wp:comment_date>2008-10-13 17:09:46</wp:comment_date>
    <wp:comment_date_gmt>2008-10-13 15:09:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[a little update: 
the listed gtk runtime doesn't contain a valid glade dll. so, you shall download another gtk runtime...  (http://gladewin32.sourceforge.net/)
extract from this archive the libglade-2.0.0.dll file and put it into the lib folder. make sure that your path environment variable contains the good gtk runtime... otherwise you will miss other things (gtksourceview, for example)..

good luck :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>56243</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2008-10-13 15:09:46]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title><![CDATA[how to create/share a directory over a SMB network, using the command line]]></title>
  <link>https://nilleb.wordpress.com/2008/10/14/how-to-createshare-a-directory-over-a-smb-network-using-the-command-line/</link>
  <pubDate>Tue, 14 Oct 2008 16:14:58 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=73</guid>
  <description/>
  <content:encoded><![CDATA[<code>@echo off
if x%1x==xx goto usage
if +%2+ == ++ goto usage
if +%1+ == +/?+ goto usage
if +%1+ == +?+ goto usage
:command
md %1
net share %2=%1 /grant:Everyone,FULL
CACLS %1 /E /G Everyone:F
goto end
:usage
echo salut mon gars, ce script va creer le dossier que tu passe comme premier paramètre 
echo et le partage sur le reseau (pour Everyone) avec le nom que t'as passé comme deuxième paramètre.
echo exemple:
echo cescript.bat c:\totocaca totocacapartage
:end</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>73</wp:post_id>
  <wp:post_date>2008-10-14 18:14:58</wp:post_date>
  <wp:post_date_gmt>2008-10-14 16:14:58</wp:post_date_gmt>
  <wp:post_modified>2008-10-14 18:15:22</wp:post_modified>
  <wp:post_modified_gmt>2008-10-14 16:15:22</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-createshare-a-directory-over-a-smb-network-using-the-command-line</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="command-line"><![CDATA[command line]]></category>
  <category domain="post_tag" nicename="dos"><![CDATA[dos]]></category>
  <category domain="post_tag" nicename="share"><![CDATA[share]]></category>
  <category domain="post_tag" nicename="smb"><![CDATA[smb]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[how to create a glade store]]></title>
  <link>https://nilleb.wordpress.com/2008/10/29/how-to-create-a-glade-store/</link>
  <pubDate>Wed, 29 Oct 2008 15:28:10 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=85</guid>
  <description/>
  <content:encoded><![CDATA[unfortunately, guys at pygtk haven't thought about a solution about making persistent GUIs. This means that, at your next graphical application restart, you will get the initial window size and settings. And with initial, I mean the design ones.

In the last few days, I have developed a small class to store sensible informations: gladeStore. This class is instanciated just on the application 'destroy' event, and its job is to save all the listed properties for all the widgets belonging to your application.

It works without problems on a small test application. I will be bughunting on Gino the next few days.

BTW: Gino interface has been redesigned just today. And XMLTreeView supports the 'tail' of XML nodes, for the sake of completeness :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>85</wp:post_id>
  <wp:post_date>2008-10-29 17:28:10</wp:post_date>
  <wp:post_date_gmt>2008-10-29 15:28:10</wp:post_date_gmt>
  <wp:post_modified>2008-10-29 17:28:10</wp:post_modified>
  <wp:post_modified_gmt>2008-10-29 15:28:10</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-create-a-glade-store</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="gino"><![CDATA[gino]]></category>
  <category domain="post_tag" nicename="glade"><![CDATA[glade]]></category>
  <category domain="post_tag" nicename="gladestore"><![CDATA[gladestore]]></category>
  <category domain="post_tag" nicename="gui"><![CDATA[GUI]]></category>
  <category domain="post_tag" nicename="lxml"><![CDATA[lxml]]></category>
  <category domain="post_tag" nicename="persistent"><![CDATA[persistent]]></category>
  <category domain="post_tag" nicename="save"><![CDATA[save]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <category domain="post_tag" nicename="xmltreeview"><![CDATA[xmltreeview]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[thursday evening, before a travel]]></title>
  <link>https://nilleb.wordpress.com/2008/11/07/thursday-evening-before-a-travel/</link>
  <pubDate>Thu, 06 Nov 2008 22:01:44 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=87</guid>
  <description/>
  <content:encoded><![CDATA[hello.

not really work subjects this evening. rather a travel depart. going back to italy, since the 11th November's a memory day.

The luggage's not yet ready, but let me talk you about last updates. Gino's changing, and it now includes a Gtk.Builder support. Yep, not yet working, but right in progress.

I could talk about the gtksourceview now included in the interface. I could talk about XMLFinder, which evaluates your favourite xpaths for a given document. I would also come back to the gladestore, a fine concept, but already old. Today, I would like to change in favour of pickle, for example. and add some features to the store.

well, I must admit, the mind travels so far, and in a faster way than fingers. I cannot find so much time to complete Gino.

the next days I will be probably writing a couple instruments (cmd shell, and python again) to help a colleague to put patches onto production servers. question of improving time usage. oh, time losses.

See you in Alba, the next week end ;-)

and.. allez St Etienne! :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>87</wp:post_id>
  <wp:post_date>2008-11-07 00:01:44</wp:post_date>
  <wp:post_date_gmt>2008-11-06 22:01:44</wp:post_date_gmt>
  <wp:post_modified>2008-11-07 00:01:44</wp:post_modified>
  <wp:post_modified_gmt>2008-11-06 22:01:44</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thursday-evening-before-a-travel</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[back, indeed]]></title>
  <link>https://nilleb.wordpress.com/2008/11/13/back-indeed/</link>
  <pubDate>Wed, 12 Nov 2008 23:02:39 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=89</guid>
  <description/>
  <content:encoded><![CDATA[I'm in Lyon again, since a couple of hours.

It sounds always strange to start again talking in French. I love the french sounds, but the Italian-French transition is always noticeable.

Coming back, I've read a couple of things I have heard of during the vacations. PyHP, for example (see <a title="PyHP. Are you George Clooney? No, it must be a mistake." href="http://www.pyhp.org/">pyhp.org</a>). And "Sub-classing GObject in Python" (<a title="PyGtk subclassing directions" href="http://www.sicem.biz/personal/lgs/docs/gobject-python/gobject-tutorial.html">http://www.sicem.biz/personal/lgs/docs/gobject-python/gobject-tutorial.html</a>).

Well, I've also read LeMonde.fr and some other news, but, you know, it's the crisis.

I think that now, I'm able to go to bed. BTW, Thanks for the Bagna Caoda, Davide.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>89</wp:post_id>
  <wp:post_date>2008-11-13 00:02:39</wp:post_date>
  <wp:post_date_gmt>2008-11-12 23:02:39</wp:post_date_gmt>
  <wp:post_modified>2008-11-13 00:05:20</wp:post_modified>
  <wp:post_modified_gmt>2008-11-12 23:05:20</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>back-indeed</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bagna-caoda"><![CDATA[bagna caoda]]></category>
  <category domain="post_tag" nicename="davide"><![CDATA[davide]]></category>
  <category domain="post_tag" nicename="derive"><![CDATA[derive]]></category>
  <category domain="post_tag" nicename="french"><![CDATA[french]]></category>
  <category domain="post_tag" nicename="gobject"><![CDATA[gobject]]></category>
  <category domain="post_tag" nicename="italian"><![CDATA[italian]]></category>
  <category domain="post_tag" nicename="luca-barbato"><![CDATA[luca barbato]]></category>
  <category domain="post_tag" nicename="os3"><![CDATA[os3]]></category>
  <category domain="post_tag" nicename="pygtk"><![CDATA[pygtk]]></category>
  <category domain="post_tag" nicename="pyhp"><![CDATA[pyhp]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="sub-classing-gobject-in-python"><![CDATA[Sub-classing GObject in Python]]></category>
  <category domain="post_tag" nicename="subclassing"><![CDATA[subclassing]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vacations"><![CDATA[vacations]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_173364328f27c8c574d9f2b5a310285b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[news from the svn]]></title>
  <link>https://nilleb.wordpress.com/2008/11/21/news-from-the-svn-2/</link>
  <pubDate>Fri, 21 Nov 2008 20:26:21 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=93</guid>
  <description/>
  <content:encoded><![CDATA[well, the week is at its end :-)

the last week end and the last few days have seen a set of commits. these included a new gino, featuring the cut/copy and paste :-)

the study of this new feature allowed me to discover gtk.builder, gtk.uimanager, gtk.accelgroup and the management of signals in gtk.

I'm very proud to say that I can now subclass a gobject to add to it new properties and signals, and accessorily also accelerators :-)

on the bad side, this also means that I will soon be obliged to rewrite some parts of Gino, which isn't completely gtk.builder-compatible.

In the last few weeks I also started to read "Programming C# 3.0", from O'Reilly. I find the portability of softwares really interesting, so approaching the .NET framework (as well as the Mono one) will be my next step.

Once a time (not a so long time ago) I wasn't one of the fanatics of Gnome, and today I'm still greatly critic about the softwares which compose the Gnome desktop environment. But I admire Miguel de Icaza and some other Ximians, for the efforts they're making to improve the Linux system.

So, with many attentions, I'm saying today that.. software develops in a way much more faster than rivalities. To have an open-minded approach can be helpful.

Thinking about what pushed me to restart coding make sme smile. Just today I have downloaded again IronPython. :-)

Have a good trip in the net.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>93</wp:post_id>
  <wp:post_date>2008-11-21 21:26:21</wp:post_date>
  <wp:post_date_gmt>2008-11-21 20:26:21</wp:post_date_gmt>
  <wp:post_modified>2008-11-21 21:26:21</wp:post_modified>
  <wp:post_modified_gmt>2008-11-21 20:26:21</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>news-from-the-svn-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[axa1981]]></wp:comment_author>
    <wp:comment_author_email>axa1981@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://axa1981.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>158.102.162.5</wp:comment_author_IP>
    <wp:comment_date>2008-11-24 14:14:02</wp:comment_date>
    <wp:comment_date_gmt>2008-11-24 13:14:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[My friend, are you becoming a .Net monkey? :D

I'm happy you're able to find time to spend on a freesoftware project... Maybe in the future I can offer some testing support on it, since now I'm not able to find enoght free time to develop on my own. :(]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>46911</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2008-11-24 13:14:02]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title><![CDATA[joyeux noël to everybody]]></title>
  <link>https://nilleb.wordpress.com/?p=95</link>
  <pubDate/>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=95</guid>
  <description/>
  <content:encoded><![CDATA[it's probably due to the atmosphère of the Sarah MacLachlan song. it's probably this sad cloud, powered up by the classic zzzzing of the servers room just behind Poulet, that pushes me to think sad things.

what precisely? that I'm leaving Lyon, that I'm going back home. and that as well (well?), as every time I mean, I'm a bit confused. about where's home. <em>et merde, toutes les fois, et merde, ça veut dire que je suis 'blue' avant chaque voyage. et merde. non, c'est la ziq. fuck'off all these sugarly xmas songs.</em> <em>perhaps a little bit f black sabbath will put things back in the correct sense. ok, Harvey Danger is a good artist, and he'll be the responsible of my soundtrack from now on.</em>

keeping the confusion within me, I will try to go ahead and spend two relaxing weeks in Rivarolo. I'd also like to say goodbye to all the friends in Lyon, and wish them a joyeux Noël.

All the same, I'd like to do all the same with the italian ones who are reading this article. But, in their case, I'm pretty sure that I will see them during the holidays. See you soon!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>95</wp:post_id>
  <wp:post_date>2008-12-22 14:19:57</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:post_modified>2008-12-22 14:19:57</wp:post_modified>
  <wp:post_modified_gmt>2008-12-22 13:19:57</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[[OT] cmd is the base of windows programming]]></title>
  <link>https://nilleb.wordpress.com/2009/01/12/ot-cmd-is-the-base-of-windows-programming/</link>
  <pubDate>Mon, 12 Jan 2009 09:03:06 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/2009/01/12/ot-cmd-is-the-base-of-windows-programming/</guid>
  <description/>
  <content:encoded><![CDATA[press windows+R, type cmd, then Enter. ok, you're now entering the cmd shell. welcome to the heart of the windows, the real place where things that matter happen.

do you want something fast, working everywhere, fast to write? learn dos syntax.
where do you think programmers will invest, once they've to choose their formation? python, or cmd?
which solution do you think they will choose, when having to decide whether to use an object oriented, smart and fast to learn language, or the practical, feature-less and dirty cmd?
ok. you've all the questions, and you've THE answer.

well, once you've got your cmd shell, type python. (http://www.python.org/ftp/python/2.6.1/python-2.6.1.msi)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>102</wp:post_id>
  <wp:post_date>2009-01-12 10:03:06</wp:post_date>
  <wp:post_date_gmt>2009-01-12 09:03:06</wp:post_date_gmt>
  <wp:post_modified>2009-01-12 10:03:06</wp:post_modified>
  <wp:post_modified_gmt>2009-01-12 09:03:06</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ot-cmd-is-the-base-of-windows-programming</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[a way to control a remote host behind a NAT]]></title>
  <link>https://nilleb.wordpress.com/2009/02/11/a-way-to-control-a-remote-host-behind-a-nat/</link>
  <pubDate>Wed, 11 Feb 2009 14:14:02 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/2009/02/11/a-way-to-control-a-remote-host-behind-a-nat/</guid>
  <description/>
  <content:encoded><![CDATA[requisites:
* the managing part can open a couple of ports on a public internet host
* the managed part can execute a process

under these circumstances, the managing part will be able to take the control of the managed part's host.

How?
Using a little trick, based on nc (1) and pipe(2). Man is your friend, as usual.

In particular, you will have to execute two instances of nc, listening on two ports, reciprocally binded by a couple of pipes (bidirectional pipe, in the follow), on the public host of the managing part.
And you will have to execute two instances of nc, the first connecting to the port of the (managed) service you want to export, the second one connectiong to one of the ports you've created in the step before.
Doing so, you will have a socket binded to the managed part's service, on a public host.

An image is worth all the words above
<p style="text-align:center;"><a href="http://nilleb.com/pub/images/prolunga.png"><img class="aligncenter" title="a way to access a remote host behind a NAT, using an extension socket" src="http://nilleb.com/pub/images/prolunga.png" alt="" width="467" height="244" /></a></p>

Continuing with the explication, you will find at least a problem: There's no software which implements a bidirectional pipe. So I've made it. It's pretty unuseful, except in this case. Then, I've added to it a pair of functionalities, and now it is available. :-)

How have I thought such a thing? Somewhen ago, somebody told me that Apple's iChat offers you the opportunity to manage a remote host. So, I've told myself that I was able to implement the same mechanism to manage a parent's computer.

Will it be available in pidgin, soon? ;-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>105</wp:post_id>
  <wp:post_date>2009-02-11 15:14:02</wp:post_date>
  <wp:post_date_gmt>2009-02-11 14:14:02</wp:post_date_gmt>
  <wp:post_modified>2009-02-17 15:15:23</wp:post_modified>
  <wp:post_modified_gmt>2009-02-17 14:15:23</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-way-to-control-a-remote-host-behind-a-nat</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bidipipes-porta-socket-network-windows-linux-pidgin-ichat-mac-apple"><![CDATA[bidipipes porta socket network windows linux pidgin ichat mac apple]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[a way to control a remote host behind NAT (implementation)]]></title>
  <link>https://nilleb.wordpress.com/2009/02/17/a-way-to-control-a-remote-host-behind-nat-implementation/</link>
  <pubDate>Tue, 17 Feb 2009 14:25:24 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=109</guid>
  <description/>
  <content:encoded><![CDATA[yep, after the problem and  the theoretical solution, here is a couple of implementations.

prolunga is an user oriented solution. it is provided with a plain README file which will help you understand the concept and its implementation. with a pair of minor changes you will also be able to daemonize it. the readme file contains also ideas for further developments. I haven't still tried to compile it on windows, but it works on gnu/linux

bidipipes is the minimal solution. a pragmatic readme is provided, and it won't help you setting up the environment. in this case, the only help will be the <a href="http://nilleb.com/pub/images/prolunga.png">image</a> on the previous post. this software is fully tested on windows/cygwin.

Once compiled, both softwares will need as well nc(1). :-)

so far, here are the links towards the code:
<ul>
	<li><a title="Prolunga, a user friendly extension socket." href="http://nilleb.com/pub/opencode/prolunga/prolunga-0.1-src.tar.gz">prolunga-0.1-src.tar.gz</a></li>
	<li><a title="HC for an extension socket" href="http://nilleb.com/pub/opencode/prolunga/bidipipes.tar.gz">bidipipes.tar.gz</a></li>
</ul>
§]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>109</wp:post_id>
  <wp:post_date>2009-02-17 15:25:24</wp:post_date>
  <wp:post_date_gmt>2009-02-17 14:25:24</wp:post_date_gmt>
  <wp:post_modified>2010-02-15 14:15:09</wp:post_modified>
  <wp:post_modified_gmt>2010-02-15 13:15:09</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-way-to-control-a-remote-host-behind-nat-implementation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[(another) grub rescue CD]]></title>
  <link>https://nilleb.wordpress.com/2009/03/19/grub-rescue-cd/</link>
  <pubDate>Thu, 19 Mar 2009 15:48:19 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=118</guid>
  <description/>
  <content:encoded><![CDATA[In a department where disks MBR[4] are reset once a day (at least) by a disk image editor which doesn't respect standards, a GRUB rescue CD is worth the time to build it.

This kind of CD will let you boot Linux/Windows systems, perform a quick memory check, install a copy of grub to your MBR in order to be CD independent, and edit all of the above options. This copy of the CD can be used on i386 compatible systems[5].

I have followed the instructions present in the GRUB manual[1] to prepare a CD image. Then, I have uploaded it to nilleb.com[2][3], just in case. The included menu.lst took the most of the R&amp;D time. :-)

If you know a good, standards compliant, open source disk image editor, please let me know. :-)

<strong>Update:</strong> Well, after a few hours, while going home by feet since the "grève générale" affected also my metro line, I have understood that GParted already contains such a grub-rescue-CD. Then, I have also realized that the "ghost"-like software is simply dd | gzip. Once arrived home, I have had the possibility to verify that other tools exist: I'm going to add them among the post references. Ubuntuforums are the usual source of knowledge :-)

I think that the topic has been analyzed in an acceptable way, even if the Linux system is an open and exterminated vault of Parnassus :-) I can go back to work, once more extremely satisfied about using Linux.

<address>[1] <a href="http://www.gnu.org/software/grub/manual/grub.html#Making-a-GRUB-bootable-CD_002dROM">http://www.gnu.org/software/grub/manual/grub.html#Making-a-GRUB-bootable-CD_002dROM</a></address> <address>[2]<a href="http://nilleb.com/pub/grub.iso.tar.gz"> http://nilleb.com/pub/grub.iso.tar.gz</a></address> <address>[3] <a href="http://nilleb.com/pub/grub.md5">http://nilleb.com/pub/grub.md5</a></address> <address>[4] <a href="http://en.wikipedia.org/wiki/Master_boot_record">http://en.wikipedia.org/wiki/Master_boot_record</a></address> <address>[5] <a href="http://en.wikipedia.org/wiki/Intel_80386">http://en.wikipedia.org/wiki/Intel_80386</a></address> <address>[6]<a href="http://ubuntuforums.org/showthread.php?t=859651">http://ubuntuforums.org/showthread.php?t=859651</a> </address> <address>[7]<a href="http://ubuntuforums.org/showthread.php?t=35087">http://ubuntuforums.org/showthread.php?t=35087</a></address> <address>[8]<a href="http://www.debianadmin.com/backup-and-restore-your-ubuntu-system-using-sbackup.html">http://www.debianadmin.com/backup-and-restore-your-ubuntu-system-using-sbackup.html</a></address> <address>[9]<a href="http://ubuntuforums.org/showthread.php?t=24113">http://ubuntuforums.org/showthread.php?t=24113</a></address> <address>[10] <a href="http://www.sysresccd.org/Main_Page">http://www.sysresccd.org/Main_Page</a>
</address>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>118</wp:post_id>
  <wp:post_date>2009-03-19 16:48:19</wp:post_date>
  <wp:post_date_gmt>2009-03-19 15:48:19</wp:post_date_gmt>
  <wp:post_modified>2009-03-19 22:12:06</wp:post_modified>
  <wp:post_modified_gmt>2009-03-19 21:12:06</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grub-rescue-cd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_306bded6d17aaf0cba2c99cf065b0366</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_15cd4156710a5d2cd6e56ecf397428cf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f504b3a6ca14d86f2a733b61402acbc5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c6688ee431d291f543ce82c9c697443c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ab77637081147f01188dbf3ca8fb40fc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c6c39af547f32fbe87f70a7f4f857dac</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_58f231dd24d1aa5e954886b2ee6cf6ab</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_30e14fcb054068e42aed4f2cca1bafd5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8e24cdb6fe31c9b239117901da21a29d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_aabb06360d7430bebff65fd130147237</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[GIF processing on the old and cheap home computer]]></title>
  <link>https://nilleb.wordpress.com/2009/03/24/gif-processing-on-the-old-and-cheap-home-computer/</link>
  <pubDate>Tue, 24 Mar 2009 18:32:07 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=124</guid>
  <description/>
  <content:encoded><![CDATA[(to an anonymous linux user)

so somebody sent you a huge GIF image, and when you try to print/convert/* it with eog or gimp, you're getting a "unable to fork" or "not enough memory"? well, you should give a try to gifsicle!

<a href="http://linux.die.net/man/1/gifsicle">http://linux.die.net/man/1/gifsicle</a>

quick, does its work, spending practically nothing of your memory.

good luck!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>124</wp:post_id>
  <wp:post_date>2009-03-24 19:32:07</wp:post_date>
  <wp:post_date_gmt>2009-03-24 18:32:07</wp:post_date_gmt>
  <wp:post_modified>2009-03-24 19:32:07</wp:post_modified>
  <wp:post_modified_gmt>2009-03-24 18:32:07</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gif-processing-on-the-old-and-cheap-home-computer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b2a587d3a86e31ac2854f12dd2aa4cde</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[runner2 - ready to use]]></title>
  <link>https://nilleb.wordpress.com/2009/04/20/runner2-ready-to-use/</link>
  <pubDate>Mon, 20 Apr 2009 16:02:31 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=129</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://www.assembla.com/wiki/show/etools/Runner2">runner2</a> is ready to use.

runner2 is an engine to execute operations defined in an XML recipe.

it executes your operations according to their priority (priority is an attribute of each operation node). runner2 fires the operations at the same priority level at the same time, then waits for the completion of each operation in the same priority level before the switch to the next priority level.

no importance where your operation nodes are on the XML tree: runner2 will find them. make only sure that you've filled their priority.

runner2 logs all the actions taken, and it prints out a nice-to-see report. and if you don't want to see the report, you can simply save it to an <a href="http://www.sqlite.org/">sqllite</a> file.

it is easily extensible, and quite difficult to break. (the engine code is separated from the extension code.) the extension code can be written in python.

I could as well tell you that Runner2 is an automatic tests engine, or an installer, or a software deployer. Or all this at the same time. But that's not me that will say that. It's you. :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>129</wp:post_id>
  <wp:post_date>2009-04-20 17:02:31</wp:post_date>
  <wp:post_date_gmt>2009-04-20 16:02:31</wp:post_date_gmt>
  <wp:post_modified>2009-04-20 17:02:31</wp:post_modified>
  <wp:post_modified_gmt>2009-04-20 16:02:31</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>runner2-ready-to-use</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>8</wp:comment_id>
    <wp:comment_author><![CDATA[Ivo]]></wp:comment_author>
    <wp:comment_author_email>ivo.bellinsalarin+wordpress@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://iagosbar.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>193.251.27.243</wp:comment_author_IP>
    <wp:comment_date>2009-08-14 14:10:48</wp:comment_date>
    <wp:comment_date_gmt>2009-08-14 13:10:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[the next step is to use a real world scheduling library, instead of my homemade one. I'm thinking to libev, for example.

if somebody wants to participate to the poll, feel free to give me an advice :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>56243</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value><![CDATA[2009-08-14 13:10:48]]></wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title><![CDATA[cxfinder - a console xpath evaluator]]></title>
  <link>https://nilleb.wordpress.com/2009/08/14/cxfinder-a-console-xpath-evaluator/</link>
  <pubDate>Fri, 14 Aug 2009 13:22:42 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=133</guid>
  <description/>
  <content:encoded><![CDATA[cxfinder was waiting in the cubby-hole since almost one year. today is getting out.

cxfinder is an XPath evaluator, a sort of grep which knows XML. you can give him a complete xpath pattern or a simple string. it will evaluate the pattern/text against the document that you pass as second argument. then it will format a report about the elements satisfaying the pattern, with their unique and reversible path.

the code is available on <a href="http://nilleb.com/pub/opencode/xfinder/cxfinder+.py">nilleb.com</a>, as usual. a partially completed GTK interface is available on assembla.com, even if based on the last year code/conception. a QT based graphical interface will probably born, in the next year. :-)]]></content:encoded>
  <excerpt:encoded><![CDATA[cxfinder is a console xpath evaluator written in Python, based on lxml.]]></excerpt:encoded>
  <wp:post_id>133</wp:post_id>
  <wp:post_date>2009-08-14 14:22:42</wp:post_date>
  <wp:post_date_gmt>2009-08-14 13:22:42</wp:post_date_gmt>
  <wp:post_modified>2010-02-15 14:12:47</wp:post_modified>
  <wp:post_modified_gmt>2010-02-15 13:12:47</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cxfinder-a-console-xpath-evaluator</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[cmerger - a console tiff and pdf merger]]></title>
  <link>https://nilleb.wordpress.com/2009/08/24/cmerger-a-console-tiff-and-pdf-merger/</link>
  <pubDate>Mon, 24 Aug 2009 14:05:05 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=140</guid>
  <description/>
  <content:encoded><![CDATA[features
<ul>
	<li>regular expressions to design files to be merged</li>
	<li>default parameters (ie. no argument is required)</li>
	<li>file format detection</li>
	<li>unit tests on command line</li>
	<li>online manual</li>
</ul>
<strong>Note:</strong> tiftool and pdftool are not included, since they're proprietary software.

<a href="http://nilleb.com/pub/opencode/cmerger.py">Download</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>140</wp:post_id>
  <wp:post_date>2009-08-24 15:05:05</wp:post_date>
  <wp:post_date_gmt>2009-08-24 14:05:05</wp:post_date_gmt>
  <wp:post_modified>2010-02-15 14:05:03</wp:post_modified>
  <wp:post_modified_gmt>2010-02-15 13:05:03</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cmerger-a-console-tiff-and-pdf-merger</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Converter.jar: an electronic format converter]]></title>
  <link>https://nilleb.wordpress.com/2009/09/29/converter-a-format-converter/</link>
  <pubDate>Tue, 29 Sep 2009 12:57:46 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=150</guid>
  <description/>
  <content:encoded><![CDATA[Converter.jar is an applet to convert every kind of file to each other format (enfin, presque...). This applet uses the <a href="http://www.esker.com/">Esker</a> <a href="http://doc.esker.com/eskerondemand/cv_ma/en/web_services.asp">WebServices</a> (thanks a lot!) to convert the input file in the pdf format (by default) or to the format you specify.

You will need an <a href="http://www.esker.com/deliveryware_solutions/eod.asp">EskerOndemand</a> account to use it, but format conversions are free (thanks again, <a href="http://www.esker.com/">Esker</a>!)

Converter can as well convert all the files contained in a given folder to the wished fomat, have a look at its README :-)

The folder where you can download its binaries and a pair of sample command lines: <a href="http://nilleb.com/pub/opencode/Converter/">http://nilleb.com/pub/opencode/Converter/</a>. If you want to have a (look at|copy of) the sources, simply ask (or have a look at the referenced <a href="http://doc.esker.com/eskerondemand/cv_ma/en/web_services.asp">webservices</a> online help).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>150</wp:post_id>
  <wp:post_date>2009-09-29 13:57:46</wp:post_date>
  <wp:post_date_gmt>2009-09-29 12:57:46</wp:post_date_gmt>
  <wp:post_modified>2010-02-15 14:05:57</wp:post_modified>
  <wp:post_modified_gmt>2010-02-15 13:05:57</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>converter-a-format-converter</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_841ea387c2c33465cb5d08712bf89ea2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[expose yourself to ghostscript]]></title>
  <link>https://nilleb.wordpress.com/2009/10/16/expose-yourself-to-ghostscript/</link>
  <pubDate>Fri, 16 Oct 2009 08:36:46 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=152</guid>
  <description/>
  <content:encoded><![CDATA[ghostscript is a powerful, yet slightly complicated tool.
<ul>
	<li>it allows you to change the paper format or resolution of a pdf,</li>
	<li>it allows you to convert it to other electronic formats, among which tiff</li>
	<li>it allows you to change its properties, and to optimize it for different usages</li>
</ul>
in the last weeks, I've used <a href="http://pages.cs.wisc.edu/~ghost/doc/cvs/Use.htm#FIXEDMEDIA"><em>gs</em></a> to change the resolution of an input file, while converting it to tiff. then I've discovered other options, among which the one which allows me to <a href="http://pages.cs.wisc.edu/~ghost/doc/cvs/Use.htm#FIXEDMEDIA">force the output paper format</a>. on the web you find a lot of spam about proprietary tools which allow you to do this same operation, veiling the underlying gs technology.

thus I've published a <strong>bash script</strong>, which supposes the existence of gs in your execution environment, and which <strong>converts any paper format to any other common paper format</strong>. I've named it letter2a4, since its default behavior is to change the current paper format of the input document to a4.

feel free to <a href="http://nilleb.com/pub/opencode/ghostscript/letter2a4">download it</a>. you'll only need to copy <a href="http://nilleb.com/pub/opencode/ghostscript/aligntop.ps">aligntop.ps</a> to /usr/local/share or wherever you like. feel equally free to read the man page for gs(1). :-)
<p style="text-align:left;"><img class="aligncenter" title="expose yourself.... (rights probably reserved. please don't sue me.)" src="http://a3.vox.com/6a00c2251e43c4f21900c22526bd4b549d-pi" alt="" width="144" height="200" /></p>
<p style="text-align:left;">Update: this morning I have had also the time to write a gs wrapper to merge all the files (in the given directory|passed as arguments). <a href="http://nilleb.com/pub/mergeall">Download it</a>, if you like.</p>
<p style="text-align:left;">(thanks, <a href="http://mehulved.wordpress.com/">mehul</a>, for <a href="http://mehulved.wordpress.com/2008/11/02/some-nifty-fun-with-linux-and-pdf-files/">this idea</a>)</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>152</wp:post_id>
  <wp:post_date>2009-10-16 09:36:46</wp:post_date>
  <wp:post_date_gmt>2009-10-16 08:36:46</wp:post_date_gmt>
  <wp:post_modified>2010-02-15 14:11:22</wp:post_modified>
  <wp:post_modified_gmt>2010-02-15 13:11:22</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>expose-yourself-to-ghostscript</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="computer"><![CDATA[computer]]></category>
  <category domain="post_tag" nicename="format"><![CDATA[format]]></category>
  <category domain="post_tag" nicename="ghostscript"><![CDATA[ghostscript]]></category>
  <category domain="post_tag" nicename="gs"><![CDATA[gs]]></category>
  <category domain="post_tag" nicename="man"><![CDATA[man]]></category>
  <category domain="post_tag" nicename="merge"><![CDATA[merge]]></category>
  <category domain="post_tag" nicename="paper"><![CDATA[paper]]></category>
  <category domain="post_tag" nicename="paper-format"><![CDATA[paper format]]></category>
  <category domain="post_tag" nicename="quality"><![CDATA[quality]]></category>
  <category domain="post_tag" nicename="test"><![CDATA[test]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[A 'very pushed technical test' before your hiring]]></title>
  <link>https://nilleb.wordpress.com/2009/11/17/eskers-developer-tests/</link>
  <pubDate>Tue, 17 Nov 2009 16:43:38 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=165</guid>
  <description/>
  <content:encoded><![CDATA[Recently I've taken my employer's 'development test'. The 2009 version of this test looks a lot like the first University programming tests (optimize memory/CPU consumption, create your own data types and handling functions, avoid C++ standard libraries). The test looked like <a href="http://nilleb.com/pub/homeworks/test-text.txt">this text</a>.

This has been the first step of a hiring process which included a second technical test. This further test has been taken in a 'solo' condition, which excluded the use of Internet/computers/manuals. This test included some code samples that I've had to correct, a couple of small programs to perform basic operations (OOP, memory allocation and developer logic are the examined subject) and some general computing knowledge questions (what certain technologies are, how to perform a typical action on an Unix system, et cetera).

(somebody calls this test, or its equivalent ten years ago, a 'test technique assez poussé'... <a href="http://emploi.journaldunet.com/magazine/1168/">http://emploi.journaldunet.com/magazine/1168/</a>)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>165</wp:post_id>
  <wp:post_date>2009-11-17 17:43:38</wp:post_date>
  <wp:post_date_gmt>2009-11-17 16:43:38</wp:post_date_gmt>
  <wp:post_modified>2010-01-05 10:24:34</wp:post_modified>
  <wp:post_modified_gmt>2010-01-05 09:24:34</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eskers-developer-tests</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_00a2d93ae27217dc460b8abe993bdf82</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Exchange 2010 and Organizational Forms Libraries]]></title>
  <link>https://nilleb.wordpress.com/2010/02/26/exchange-2010-and-organizational-forms-libraries/</link>
  <pubDate>Fri, 26 Feb 2010 15:26:47 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">http://nilleb.wordpress.com/?p=187</guid>
  <description/>
  <content:encoded><![CDATA[With Exchange 2010 you've the possibility to create a Public Folder Database (PFDB), in order to keep the backward compatibility with Outlook 2003 and Entourage clients. You can create such PFDB answering yes to a question during the setup, or with a specific procedure through the Exchange Management Console. Once such a PFDB is available, you can create an Organizational Forms Library.

Concerning this Organizational Forms Libraries (used to store the Outlook Forms since at least Exchange 2000) an official procedure existed for Exchange 2007: <a href="http://support.microsoft.com/kb/933358">http://support.microsoft.com/kb/933358</a>

Trying to complete this procedure, you'll find out that the<strong> PR_URL_NAME</strong> property is not available for an Exchange 2010 Organizational Forms Library. So, here you the missing steps, that you shall execute right after the <strong>2.g</strong> step in the official Microsoft procedure:
<ul>
	<li>On the <strong>Property Pane</strong> menu, click on <strong>Modify "Extra" Properties</strong></li>
	<li>Click <strong>Add</strong>, then type in the <strong>Property Tag</strong> textbox the value 0x6707001E</li>
	<li>In the <strong>Property Type</strong> textbox the value <strong>PT_STRING8</strong> appears. In the <strong>Property Name</strong> box the <strong>PR_URL_NAME</strong> string appears along with some other characters</li>
	<li>Click <strong>OK</strong> twice</li>
	<li>Double click on the <strong>PR_URL_NAME</strong> property.</li>
	<li>Type in the <strong>Ansi String</strong> textbox the value <strong>/NOM_IPM_SUBTREE/EFORMS REGISTRY/[The Name Of Your Organizational Forms Library]</strong></li>
	<li>Click <strong>OK</strong></li>
	<li>Now you can complete the official procedure starting on the step <strong>2.h</strong></li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>187</wp:post_id>
  <wp:post_date>2010-02-26 16:26:47</wp:post_date>
  <wp:post_date_gmt>2010-02-26 15:26:47</wp:post_date_gmt>
  <wp:post_modified>2010-03-26 09:37:50</wp:post_modified>
  <wp:post_modified_gmt>2010-03-26 08:37:50</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exchange-2010-and-organizational-forms-libraries</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="2010"><![CDATA[2010]]></category>
  <category domain="post_tag" nicename="exchange"><![CDATA[Exchange]]></category>
  <category domain="post_tag" nicename="exchange-2010"><![CDATA[exchange 2010]]></category>
  <category domain="post_tag" nicename="organizational-forms-library"><![CDATA[organizational forms library]]></category>
  <category domain="post_tag" nicename="outlook"><![CDATA[outlook]]></category>
  <category domain="post_tag" nicename="public-folder-database"><![CDATA[public folder database]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[56243]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_81c104e9a6ea58b4c00f27566e4b1566</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Hello again]]></title>
  <link>https://nilleb.wordpress.com/?p=196</link>
  <pubDate/>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">https://nilleb.wordpress.com/?p=196</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>196</wp:post_id>
  <wp:post_date>2016-12-06 14:00:39</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:post_modified>2016-12-06 14:00:39</wp:post_modified>
  <wp:post_modified_gmt>2016-12-06 13:00:39</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title><![CDATA[Speeding up a GAE-standard application automated tests]]></title>
  <link>https://nilleb.wordpress.com/2017/05/29/speeding-up-a-gae-standard-application-automated-tests/</link>
  <pubDate>Mon, 29 May 2017 14:11:26 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">https://nilleb.wordpress.com/?p=203</guid>
  <description/>
  <content:encoded><![CDATA[&nbsp;
<div class="markdown-here-wrapper">
<p style="margin:0 0 1.2em!important;">If you’re developing on a Google AppEngine standard environment, you know how slow the dev_appserver is. You have surely experienced its long setup times on the first request being served (probably because of the SQLite based datastore implementation). And also the long shutdown times (when the search indexes are being written to the disk).</p>
<p style="margin:0 0 1.2em!important;"><a href="https://www.lumapps.com/en/">LumApps</a> had an automated tests suite, split up in scenarii. Each scenario was performing a set of requests to a (new) dev_appserver instance.
The isolation was made restoring the datastore and search index before playing a scenario. A specific scenario was in charge of recreating the reference datastore and search index. To complete the isolation, the instance was rebooted between two scenarii.</p>
<p style="margin:0 0 1.2em!important;">In this situation, the scenarii took 46’ to complete. We didn’t have an idea of how much code was being covered. We just evaluated the number of public endpoints being called (this gave a gross evaluation). Debugging the server in order to get more information about what was going on was also kind of prehistoric.</p>
<p style="margin:0 0 1.2em!important;">And last, on my system the tests took even more than 46’. Much more. And I was unable to test my code impacts.</p>

<h2 id="the-journey-begins" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">The journey begins</h2>
<p style="margin:0 0 1.2em!important;">At first, I started coding unit tests. Since I was new to Python and GAE, that allowed me to discover coverage.py, pytest, mock, and the GAE testbed. I was delighted about their maturity level and the functionalities they sported out. In particular, thanks Ned, thanks Alex.</p>
<p style="margin:0 0 1.2em!important;">After a few weeks writing unit tests, my thoughts went back to the existing automated tests. I knew that I could make something to speed them up.
How do they work? They’re LumRest scenarii (LumRest is an <a href="https://github.com/lumapps/lumRest">open-source project</a>). You just put in a <a href="https://github.com/lumapps/lumRest/blob/master/scenarios/urlshortener.yaml">yaml file</a> a list of commands, where each command corresponds to an endpoint that shall be called. Each command has a body (in the form of: a json file, inline json, a list of fields and the corresponding values). When in the scope of a command, you have a few keywords that allow you to eval python code or jsonpath expressions, just before or just after emitting the request. You can save a response, in order to reuse it. And you can check that the response corresponds to a certain model/statuscode.</p>

<h2 id="discovering-endpoints-and-messages" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Discovering endpoints and messages</h2>
<p style="margin:0 0 1.2em!important;">The first step I took was to discover endpoints and messages. When addressing google-endpoints, you have to provide a typed request and you will receive a typed response. Type validation takes place when querying endpoints. Discovering endpoints was pretty easy, using the <code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:0 .3em;white-space:pre-wrap;border:1px solid #eaeaea;background-color:#f8f8f8;border-radius:3px;display:inline;">get_api_classes()</code> method.</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">our_endpoints = endpoints.api(name='application',
 version='v1',
 description="Application APIs",
 documentation="http://api.company.com/application/",
 allowed_client_ids=CLIENT_IDS)

def get_endpoints_map(endpoints_def):
 api_classes = endpoints_def.get_api_classes()
 paths = {}
 for cls in api_classes:
 base_path = cls.api_info._ApiInfo__path
 for _, method_desc in cls._ServiceClass__remote_methods.items():
 method_key = '{}/{}'.format(base_path, method_desc.method_info._MethodInfo__path)
 paths[method_key] = (cls, method_desc)
 assert paths
 return paths

api_map = get_endpoints_map(our_endpoints)
# &gt; api_map
{'user/list': &lt;function&gt;}
{'user/get': &lt;function&gt;}
[..]
</code></pre>
<p style="margin:0 0 1.2em!important;">This function hasn’t evolved at all, that’s a sign that it was good enough to get its job done. The discovery doesn’t take long, and it is being executed only once, at the beginning of the tests.</p>

<h2 id="call-the-endpoints-" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Call the endpoints…</h2>
<p style="margin:0 0 1.2em!important;">Once the endpoints were known, how to use them? I had the function to call, and that means also the request/response types. But our implementation was just passing json objects and getting back json objects.</p>
<p style="margin:0 0 1.2em!important;">On the one way side, I have searched the google code for the classes transforming a json request in a Message, but after a while I decided that implementing a simple recursive algorithm would have taken less time. I was probably wrong, because I kept modifying this function until the last days. But with about 50 lines of code, today everything seems to work.</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">def process_value(value_type, value, is_repeated, contextualize=None):
 current = value
 variant = value_type.variant
 if is_repeated and not isinstance(value, list):
 current = [value]
 if is_repeated and value is None:
 current = []
 if variant == Variant.ENUM:
 current = value_type.type(value)
 if variant == Variant.STRING and isinstance(value, int):
 current = unicode(value)
 if variant == Variant.INT32 and isinstance(value, basestring):
 current = int(value)
 if variant == Variant.MESSAGE:
 if is_repeated:
 current = []
 if isinstance(value, list):
 current.extend(process_value(value_type, item, False, contextualize) for item in value)
 elif isinstance(value, dict):
 list_elem = value_type.type()
 for key, item in value.items():
 if hasattr(list_elem, key):
 current = [process_value(
 getattr(value_type.type, key), item, value_type.type.repeated, contextualize
 )]
 else:
 raise ValueError('unexpected type {} for value'.format(type(value)))
 else:
 current = value_type.type()
 for key, item in value.items():
 if hasattr(current, key):
 subtype = getattr(value_type.type, key)
 setattr(current, key, process_value(subtype, item, subtype.repeated, contextualize))
 else:
 context = contextualize() if contextualize else ''
 logger.warning("%s the request type &lt;%s&gt; lacks a '%s' attribute", context, value_type, key)
 return current

def call_endpoint(target_class, method_desc, contextualize=None, **kwargs):
 request_type = method_desc.remote.request_type
 response_type = method_desc.remote.response_type
 request = request_type()
 if kwargs:
 for key, value in kwargs.items():
 if hasattr(request, key):
 value_type = getattr(request_type, key, None)
 if value_type:
 setattr(request, key, process_value(value_type, value, value_type.repeated, contextualize))
 else:
 setattr(request, key, value)
 else:
 context = contextualize() if contextualize else ''
 logger.warning("%s the request type &lt;%s&gt; lacks a '%s' attribute", context, request_type, key)

instance = target_class()
 if isinstance(instance, Service):
 instance.initialize_request_state(FakeHttpRequestState())

response = method_desc(instance, request)
 assert isinstance(response, response_type)
 return response
</code></pre>
<h2 id="-and-get-something-back" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">.. and get something back</h2>
<p style="margin:0 0 1.2em!important;">Then it came the time of serializing the response. In this case, I was so dissatisfied with my implementation, that after a few days I searched more in depth the google code, finding at last ProtoJson. This is probably not the code used by the appserver (because the serialization sometimes differs, when it’s question of nested empty dictionaries/lists).</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">def typed_response_to_dict(instance):
 converted = instance
 if isinstance(instance, Message):
 original_instance = copy.deepcopy(instance)
 converted = json.loads(ProtoJson().encode_message(instance))
 # fixette: to pass the workflow tests (dictionaries which contain only None values are dropped) till the root
 # this is not true for the dev_appserver
 original_properties = getattr(original_instance, 'properties', {})
 properties = getattr(instance, 'properties', {})
 if original_properties and not properties:
 converted['properties'] = {}
 elif isinstance(instance, BaseEndpointsModel):
 logger.warning('We are receiving a BaseEndpointsModel instead of a protorpc.messages.Message')
 converted = instance.to_dict_full()
 return converted
</code></pre>
<h2 id="stubbing-out-the-dev_appserver-a-rapid-introduction" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Stubbing out the dev_appserver — a rapid introduction</h2>
<p style="margin:0 0 1.2em!important;">The pitch of this dissertation was about the slugginess of the dev_appserver. So, how to make it faster?
When you’re unit-testing a GAE application, you can use the <a href="https://cloud.google.com/appengine/docs/standard/python/tools/localunittesting">testbed</a>. It’s a great piece of code.
My knowledge of the dev_appserver is small, yet, but.. It uses a set of stubs to fullfill its tasks. On the production nvironment, these stubs are being replaced with real services, queried through an api_proxy. On the local environment, the dev_appserver uses Sqlite as datastore stub, the RAM for the memcache and the search_index stubs.
In the unit tests context, you will be using an alternative DatastoreStub (based on simple pickling/unpickling of objects to the filesystem) and the same stubs for the search_index and memcache.
You could be willing to use also the urlfetch stub (when consuming data from google cloud storage, for example). It’s good to know that you will have to initialize the blobstore stub along with the urlfetch stub:</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">self.testbed.init_blobstore_stub()
self.testbed.init_urlfetch_stub()
</code></pre>
<p style="margin:0 0 1.2em!important;">And, if your application is made up of several modules, you will also need the modules stub. I suggest you to read the topic on <a href="http://stackoverflow.com/a/28228867">http://stackoverflow.com/a/28228867</a>, in order to know how to initialize all the modules required by your application.
And, at last, if your application uses deferred tasks and/or background tasks, you will have to initialize the taskqueue stub specifying the path to the folder containing the <code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:0 .3em;white-space:pre-wrap;border:1px solid #eaeaea;background-color:#f8f8f8;border-radius:3px;display:inline;">queues.yaml</code> file.
I have not mentioned the email stub or the appidentity stub (or all the other stubs you could need for your tests). It’s better to read the official documentation, there’s always a useful option you could make profit of.</p>

<h3 id="persist-data" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.3em;">Persist data</h3>
<p style="margin:0 0 1.2em!important;">If you like to persist the data at the end of a test, you can use the datastore_file=path, save_changes=True option of the init_datastore_stub. For the search index stub, you will have to get the stub and use its Write method.
We use this technique for our ‘generator’ scenario.</p>

<h4 id="at-the-test-setup" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.2em;">At the test setup</h4>
<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">self.testbed = testbed.Testbed()
self.testbed.activate()
self.testbed.init_memcache_stub()
self.testbed.init_datastore_v3_stub(datastore_file=self.DATASTORE_FILE, save_changes=True)
[..]
from google.appengine.ext.testbed import SEARCH_SERVICE_NAME
if not enable:
 self.testbed._disable_stub(SEARCH_SERVICE_NAME)
 return
from google.appengine.api.search import simple_search_stub
if simple_search_stub is None:
 from google.appengine.ext.testbed import StubNotSupportedError
 raise StubNotSupportedError('Could not initialize search API')
stub = simple_search_stub.SearchServiceStub(index_file=self.SEARCH_INDEX_FILE)
self.testbed._register_stub(SEARCH_SERVICE_NAME, stub)
</code></pre>
<h4 id="at-the-test-teardown" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.2em;">At the test teardown</h4>
<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;"># nothing to do with the datastore stub (thanks to the save_changes kwarg)
self.search_stub.Write()
</code></pre>
<h2 id="lumrest-grammar-support" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">LumRest grammar support</h2>
<p style="margin:0 0 1.2em!important;">Since the topic of this document is about performances, I won’t give you details. In order to execute the existing tests, I have had to support the DSL they were written in. It has taken a certain time, and it’s not fully supported, yet. The commands supported today allow my layer to execute 99% of the tests (and to get hints about what’s going wrong or what could be improved)</p>

<h2 id="background-tasks-execution" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Background tasks execution</h2>
<p style="margin:0 0 1.2em!important;">The testbed doesn’t provide any kind of task runner. It’s up to you to decide whether to execute the tasks that have been queued during the unit test (or just check they’re there).
The official google documentation gives you an example about how to execute deferred tasks. But old applications probably use task handlers.
A task handler is registered as a special route, at your application startup.
At last, a task will just be a method of the http request handler. And in order to interact with a task, you will have to provide a specially crafted HTTP Request. I have already spoken about reimplementing the serialization/deserialization of requests and responses.. But this time it has been definitely simpler. In facts, I kept some bugs in the execution logic till the last days just to spice up my experience :-)
The whole taskrunner logic takes about 80 lines of code, and will be the longest except in this dissertation.</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">class AggregateException(Exception):
 def __init__(self, message, errors):
 super(AggregateException, self).__init__(message)
 self.errors = errors

class FakeHttpRequestState(object):
 def __init__(self, **kwargs):
 self.headers = kwargs

class FakeSessionStore(object):
 def __init__(self):
 self.config = {'cookie_args': {}}

def get_session(self, factory=None):
 return factory('mock', self).get_session()

def get_secure_cookie(self, *args, **kwargs):
 return ''

class TaskRunner(object):
 def __init__(self):
 self.routes_patterns = []
 for route in routes: # your web application routes
 pattern = re.compile(route[0])
 self.routes_patterns.append((pattern, route[1]))

@staticmethod
 def __init_handler(handler, task):
 environ = {}
 method = task.method.upper()
 url = task.url
 if task.payload:
 args = {method: task.payload}
 else:
 args = {}

handler.request = Request.blank(url, environ=environ, headers=task.headers, **args)
 handler.session_store = FakeSessionStore()

def run_task(self, task):
 if task.url == '/_ah/queue/deferred':
 deferred.run(task.payload)
 else:
 for route in self.routes_patterns:
 if route[0].match(task.url):
 handler_cls = route[1]
 break
 if not handler_cls:
 raise ValueError("handler not found for task: %s/%", task.url, task.payload)
 handler = handler_cls()
 self.__init_handler(handler, task)
 method = getattr(handler, task.method.lower())
 method()

def safe_run_task(self, task):
 try:
 self.run_task(task)
 except Exception as err:
 task_desc = task.url
 if task.url == '/_ah/queue/deferred':
 import pickle
 task_unpickled = pickle.loads(task.payload)
 task_desc = task_unpickled[1][:2]
 if len(task_desc) == 2:
 task_desc = u'{}.{}'.format(type(task_desc[0]).__name__, task_desc[1])
 else:
 task_desc = repr(task_unpickled[0].func_code)
 logger.exception("caught exception during the execution of the task '%s': %s", task_desc, err)
 return err

def run_tasks(self, tasks):
 exceptions = []
 for task in tasks:
 val = self.safe_run_task(task)
 if val:
 exceptions.append(val)
 if exceptions:
 raise AggregateException(
 'caught one or more exceptions during the execution of background tasks', exceptions
 )
</code></pre>
<h2 id="stubbing-out-the-http-communications" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Stubbing out the HTTP communications</h2>
<p style="margin:0 0 1.2em!important;">The application was still interacting with third party APIs. This was a pain in the neck, because of sluggy/unstable network connections (yeah, they still exist in 2017).
For this reason, at some point we started using <a href="https://vcrpy.readthedocs.io/en/latest/index.html">vcrpy</a>. This kind of tool replaces all the classes/methods responsible of communicating with a remote server via HTTP. The replacements record all the exchanges (on their first execution). And if a scenario has already been registered, vcrpy uses the recorded exchanges to simulate the dialog between our application and the third party server.
This way of proceeding is safe unless the third party APIs undergo a breaking change.
For our tests, that meant decorating all the methods with the attribute:</p>

<pre style="font-size:1em;font-family:Consolas, Inconsolata, Courier, monospace;line-height:1.2em;background-color:transparent;margin:1.2em 0;"><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:.5em .7em;white-space:pre;border:1px solid #cccccc;background-color:#f8f8f8;border-radius:3px;display:block !important;overflow:auto;">@vcr.use_cassette(cassette_library_dir=os.path.join(os.path.dirname(os.path.dirname(__file__)), 'data/cassettes'))
</code></pre>
<h2 id="conclusion" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.4em;border-bottom:1px solid #eeeeee;">Conclusion</h2>
<h3 id="what-s-strange-today" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.3em;">What’s strange, today</h3>
<ul style="margin:1.2em 0;padding-left:2em;">
	<li style="margin:.5em 0;">The GAE DatastoreFileStub seems to have some bugs related to concurrency. One of our tests was failing since the results were not consistent. Mocking the <code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:0 .3em;white-space:pre-wrap;border:1px solid #eaeaea;background-color:#f8f8f8;border-radius:3px;display:inline;">threading.Thread()</code><code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:0 .3em;white-space:pre-wrap;border:1px solid #eaeaea;background-color:#f8f8f8;border-radius:3px;display:inline;">start</code> and <code style="font-size:.85em;font-family:Consolas, Inconsolata, Courier, monospace;margin:0 .15em;padding:0 .3em;white-space:pre-wrap;border:1px solid #eaeaea;background-color:#f8f8f8;border-radius:3px;display:inline;">join</code> methods allowed us to pass past these buggy behaviors.</li>
	<li style="margin:.5em 0;">The sortOrder doesn’t seem to work for datetimes (when querying objects from the datastore — ndb, and sorting them by their createdAt date, we get results that are not sorted).</li>
</ul>
<h3 id="results-met" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.3em;">Results met</h3>
<ul style="margin:1.2em 0;padding-left:2em;">
	<li style="margin:.5em 0;">The tests execute faster. They take only 20% of the time they took initially.</li>
	<li style="margin:.5em 0;">We are able to get branch-level code coverage indicators. We know which portions of the code can be changed confidently.</li>
	<li style="margin:.5em 0;">We are able to debug a test using pdb (or pydev).</li>
	<li style="margin:.5em 0;">I a able to evaluate confidently what I’m breaking! And it doesn’t take an entire night ;-)</li>
</ul>
<h3 id="what-could-be-improved" style="margin:1.3em 0 1em;padding:0;font-weight:bold;font-size:1.3em;">What could be improved</h3>
<ul style="margin:1.2em 0;padding-left:2em;">
	<li style="margin:.5em 0;">drop the support for the LumRest grammar and write the tests directly in python. To accomplish this aim, we shall be able to execute the tests on the stubs AND on the dev_appserver (like lumrest did). This could allow us to detect misbehaviors in the google appengine communication layers. The best way to do this kind of tests, would be to use a dedicated deployed test environment (identical to the production one). Advantage of this solution: you don’t need to learn lumRest to write a test.</li>
	<li style="margin:.5em 0;">surely, the current lumrest-stubs implementation could be made yet faster.</li>
</ul>
</div>
&nbsp;

TL;DR
<div class="markdown-here-wrapper">
<div>​</div>
</div>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>203</wp:post_id>
  <wp:post_date>2017-05-29 15:11:26</wp:post_date>
  <wp:post_date_gmt>2017-05-29 14:11:26</wp:post_date_gmt>
  <wp:post_modified>2017-06-02 05:53:29</wp:post_modified>
  <wp:post_modified_gmt>2017-06-02 04:53:29</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>speeding-up-a-gae-standard-application-automated-tests</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="development"><![CDATA[development]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="test"><![CDATA[test]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[5558242877]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[The devil's in the details]]></title>
  <link>https://nilleb.wordpress.com/2017/08/08/the-devils-in-the-details/</link>
  <pubDate>Tue, 08 Aug 2017 17:20:57 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">https://nilleb.wordpress.com/?p=208</guid>
  <description/>
  <content:encoded><![CDATA[You know, I always start a new BigQuery query copying and pasting an existing one, and modifying it.

<code>SELECT
record.attribute,
target.kind, target.uid, target.subType, target.className
context.contextType, context.contextId, context.contextSubType, context.contextClassName, context.parent.uid
FROM
TABLE_DATE_RANGE([dataset.raw_data_], TIMESTAMP("2017-08-08"), TIMESTAMP("2017-08-08"))
WHERE
record.attribute == 'value' AND
context.parent.uid is not null
order by createdAt desc
LIMIT 1000
</code>

Then, you execute it.

And you realize that the result types don't match what you expect. In the above query, all the fields with a uid look like integers. But, in my case, there's no integer at all. Worse than that: I have the impression that the contextId and the contextKind have been switched. Since my code is responsible for collecting this data, I get the unit tests. I check them, their expected results, and I stop at a breakpoint, just to check. Everything's fine.
I start telling myself that I must have screwed the function calls in come cases. You know, Python isn't strongly typed, and you could easily pass through. My code is pretty tolerant, and at last all the data is being stored as strings. So, breakpoints, logging instructions everywhere, part 2. I even discover that deferred.defer doesn't trace anything when you're on a queue which is not the default one. Wow.
At last, I find myself logging the HTTP requests. Everything's fine on my side. OK.

Let's exclude a bug in BigQuery itself. What have I done wrong? That must be my select. Let's select everything. Looks fine, my fields have the good type AFAICS. Then, Let's have a look at the initial query. I start browsing the columns. record, OK. target, ... Well, where has passed the target.className? OK, I get it now. It's not a matter of switching columns. It's just a matter of what BigQuery allows as a valid query, and what its UI is able to parse.

One hour later, I'm happy. That was just a question of a missing comma.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>208</wp:post_id>
  <wp:post_date>2017-08-08 18:20:57</wp:post_date>
  <wp:post_date_gmt>2017-08-08 17:20:57</wp:post_date_gmt>
  <wp:post_modified>2017-08-08 18:20:57</wp:post_modified>
  <wp:post_modified_gmt>2017-08-08 17:20:57</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-devils-in-the-details</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[8051665084]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[Run a Google Cloud Datalab instance on your computer]]></title>
  <link>https://nilleb.wordpress.com/2017/08/11/run-a-google-cloud-datalab-instance-on-your-computer/</link>
  <pubDate>Fri, 11 Aug 2017 17:54:55 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">https://nilleb.wordpress.com/?p=255</guid>
  <description/>
  <content:encoded><![CDATA[On the official Google Cloud Datalab <a href="https://cloud.google.com/datalab/docs/quickstarts">quickstart</a>, Google gives you the detailed steps about how to start a GCP instance running the Jupyter notebook, where you'll experiment all the functionalities of the Datalab.

But, perhaps you don't want to pay the price of the instance. You don't need to use the cloud for that, since you have your own computer. In this case, to get a Datalab instance on your computer, you just need docker.

<code>docker run -it -p "127.0.0.1:8081:8080" -v $PWD:"/content" gcr.io/cloud-datalab/datalab:local</code>

But let's admit that you have a BigQuery dataset, with which you want to play. To access easily that data from the Datalab notebook as if you were on a dedicated instance, you'll have to:


<ol>
	<li>stop the running Datalab instance</li>
	<li> read https://developers.google.com/identity/protocols/application-default-credentials#howtheywork and get a credentials.json
</li>
	<li>if you have started the Datalab instance at least once, you'll have a datalab folder. Copy the <code>credentials.json</code> to the <code>datalab/.config</code> folder</li>
	<li><code>export GOOGLE_APPLICATION_CREDENTIALS=/content/datalab/.config/credentials.json</code></li>
	<li>once again, <code>docker run -it -p "127.0.0.1:8081:8080" -v $PWD:"/content" gcr.io/cloud-datalab/datalab:local</code></li>
	<li>open your favourite browser to the address that has been printed to the console</li>
	<li>In the first code cell, type <code>%projects set yourproject</code></li>

</ol>

Now you're ready to play with your dataset. For example:
<ol>
<li>add a code cell</li>
<li><code>%%sql --module records
SELECT field1, field2, field3, field4 
FROM dataset.table</code></li>
<li>add another code cell</li>
<li><code>import datalab.bigquery as bq
df = bq.Query(records).to_dataframe()</code></li>
</ol>

Congratulations! You have now a working pandas dataset ;-)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>255</wp:post_id>
  <wp:post_date>2017-08-11 18:54:55</wp:post_date>
  <wp:post_date_gmt>2017-08-11 17:54:55</wp:post_date_gmt>
  <wp:post_modified>2017-08-11 18:54:55</wp:post_modified>
  <wp:post_modified_gmt>2017-08-11 17:54:55</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>run-a-google-cloud-datalab-instance-on-your-computer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[8169698380]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title><![CDATA[AppEngine on MacOS is a CPU Hog: Solve This Problem with Another Python Native Extension Module]]></title>
  <link>https://nilleb.wordpress.com/2018/04/10/appengine-on-macos-is-a-cpu-hog-solve-this-problem-with-another-python-native-extension-module/</link>
  <pubDate>Tue, 10 Apr 2018 21:34:00 +0000</pubDate>
  <dc:creator>iagosbar</dc:creator>
  <guid isPermaLink="false">https://nilleb.wordpress.com/?p=300</guid>
  <description/>
  <content:encoded><![CDATA[(this is a repost of a <a href="https://medium.com/lumapps-engineering/appengine-on-macos-is-a-cpu-hog-heres-how-to-solve-this-problem-with-another-python-native-9f2a6dc5c960">medium article</a> of which I am the author)

Hey, have you read <a href="https://blog.filippo.io/building-python-modules-with-go-1-5">this gorgeous article</a> from Filippo Valsorda about how to write a Python extension in Go? You definitely should.
When I first read it, I was searching for a solution to a problem affecting all the MacBooks in our open space. You have this very same problem if you develop AppEngine applications on MacOS X. You should notice it when you launch dev_appserver.py and your CPU cooler starts going crazy. At this point, you can feel a warm breeze flowing out of your laptop and your SSD starts to age faster than it should.
<h2>Analysis of the problem</h2>
But what is the problem, exactly? Well, it resides in the mtime_file_watcher.py part of the Google Cloud SDK. This is the default file watcher for MacOS X. The file watcher is the component that watches your project source code and restarts a module to reload the modified code. On Linux, the default file watcher is the inotify_file_watcher.py so you won’t experience that warm breeze unless you don’t specify--use_mtime_file_watcher=yes as a dev_appserver.py option. If you are desperate, you can also disable the watcher entirely --automatic_restart=no but soon you will be even more desperate. Another way to mitigate this phenomenon is to fine tune the watched paths with --watcher_ignore_re=".*/app/client/.*" but honestly, when you have more than one module to run this will not produce the effects you would expect.

When I first started wandering the net searching for a solution, I found some alternatives. The most impressive article was from zeekay. In its implementation, he was using another fsevents module in Python. I have tried to use it, but it segfaulted on my MacOS. It’s C code, and I didn’t feel like rebuilding and and debugging it. I have to admit that I am more interested in Go than ol’ school C (best TIOBE language of 2017 and my favorite in 2002–2004, though).

Enter Filippo. His article sufficiently sparked my curiosity and was complete enough to get my extension running. He covers the structure of a Python extension written in Go, with the minimal C infrastructure to expose it to the Python interpreter. He shows how to parse two integers and how to return them to the caller.

My aim was to parse a list of paths and call a Python callback when an event was raised on one of the given paths. Returning the modified file and the action flags (Created, Modified, Deleted and so on). I wanted to do that in a parallel way (ie. call the callback immediately, once the event is raised. goroutines are great for that.)
<h2>What you can learn from my experience</h2>
<ul>
	<li>Go has a great development ecosystem. The most significative part of the go tooling comes from the compiler itself, but you will certainly find an extension for your favorite editor too.</li>
	<li>Go has pointers. After 7 years without them, it’s a bit weird to get to know them again. The go compiler (and its syntax checker) helped me a lot through this step.
Parsing a list of strings is a bit different from parsing two integers. This was my first segfault, and what a pleasant surprise to see that a go binary gives you the full annotated stack when this happens!</li>
	<li>(Filippo already pointed that out, thank you) C variadic functions are not accessible from cgo. Variadic means “with a variable number of parameters at its end” — like *args in Python)</li>
	<li>Useful C macros are not visible from Go. For example, I’m thinking of Py_?DECREF orPy_?INCREF. So, you have to write a wrapper function in your C portion of code. C purists will probably cry over this, but hey, it works :-)</li>
	<li>If you use goroutines in Go, you will have called the Py_InitThreads during the module initialization, in the C portion of the extension. This was my second segfault. The stack pointed out my C function, so at least I have had to debug the C code and learn a little bit of LLDB. Once I discovered which Python function was responsible for the segfault (i.e. PyGILState_Release) a little googling gave me the solution.</li>
	<li>In the case of an eventual porting of the extension code to Python 3, some clever developers have put in place a practical macro. (I have borrowed mine from Malthe Borch, and I found similar ones elsewhere.)</li>
</ul>
Once the POC was complete, there was one more obstacle to avoid: packaging. That means getting rid of “it works on my machine!” and making it a *product*. Enter the Python scripts to backup, replace (and eventually restore) the mtime file watcher that comes with AppEngine.
<h2>Result</h2>
On my machine, the main Python process started by the dev_appserver.py was consuming 156% CPU, constantly. In early January, I was about to ask my manager for a new MacBook.
Today, the code in the https://github.com/nilleb/fsevents-watcher repository allows Python to consume only 0.3% CPU. And, of course, the AppEngine application modules are being reloaded when needed.
What’s next
I would really like to write some unit tests, and understand a little more about what makes the Python interpreter delivered with the OS binary incompatible with the home brew one (even if they share the same major.minor version numbers). Once this is done, I will then perhaps build a pip package and publish it on pypi.org.
<h2>Caveats</h2>
If you update the Google Cloud components, you have to re-replace mtime_file_watcher.py with the scripts provided with the module.
<h2>Special thanks</h2>
This project was a fruit of the first LumApps Polish Week, held from January 22 to January 26. Special thanks to Lou for igniting and supporting this event.

What’s a polish week? That’s a week during which a part of LumApps takes a break from delivery deadlines, in order to improve the collective health. Everyone is free to suggest a problem and volunteer to solve it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>300</wp:post_id>
  <wp:post_date>2018-04-10 22:34:00</wp:post_date>
  <wp:post_date_gmt>2018-04-10 21:34:00</wp:post_date_gmt>
  <wp:post_modified>2020-03-20 08:04:22</wp:post_modified>
  <wp:post_modified_gmt>2020-03-20 07:04:22</wp:post_modified_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>appengine-on-macos-is-a-cpu-hog-solve-this-problem-with-another-python-native-extension-module</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="appengine"><![CDATA[appengine]]></category>
  <category domain="post_tag" nicename="golang"><![CDATA[golang]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[python]]></category>
  <category domain="post_tag" nicename="sustainable-development"><![CDATA[sustainable-development]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[41986611749]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>timeline_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1584653645]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_date</wp:meta_key>
    <wp:meta_value><![CDATA[2020-03-19]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
